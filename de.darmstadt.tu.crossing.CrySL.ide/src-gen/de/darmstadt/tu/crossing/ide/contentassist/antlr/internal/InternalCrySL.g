/*
 * generated by Xtext 2.21.0
 */
grammar InternalCrySL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package de.darmstadt.tu.crossing.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.darmstadt.tu.crossing.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.darmstadt.tu.crossing.services.CrySLGrammarAccess;

}
@parser::members {
	private CrySLGrammarAccess grammarAccess;

	public void setGrammarAccess(CrySLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDomainmodel
entryRuleDomainmodel
:
{ before(grammarAccess.getDomainmodelRule()); }
	 ruleDomainmodel
{ after(grammarAccess.getDomainmodelRule()); } 
	 EOF 
;

// Rule Domainmodel
ruleDomainmodel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainmodelAccess().getGroup()); }
		(rule__Domainmodel__Group__0)
		{ after(grammarAccess.getDomainmodelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUseBlock
entryRuleUseBlock
:
{ before(grammarAccess.getUseBlockRule()); }
	 ruleUseBlock
{ after(grammarAccess.getUseBlockRule()); } 
	 EOF 
;

// Rule UseBlock
ruleUseBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getUseBlockAccess().getObjectsAssignment()); }
			(rule__UseBlock__ObjectsAssignment)
			{ after(grammarAccess.getUseBlockAccess().getObjectsAssignment()); }
		)
		(
			{ before(grammarAccess.getUseBlockAccess().getObjectsAssignment()); }
			(rule__UseBlock__ObjectsAssignment)*
			{ after(grammarAccess.getUseBlockAccess().getObjectsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForbiddenBlock
entryRuleForbiddenBlock
:
{ before(grammarAccess.getForbiddenBlockRule()); }
	 ruleForbiddenBlock
{ after(grammarAccess.getForbiddenBlockRule()); } 
	 EOF 
;

// Rule ForbiddenBlock
ruleForbiddenBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getForbiddenBlockAccess().getForb_methodsAssignment()); }
			(rule__ForbiddenBlock__Forb_methodsAssignment)
			{ after(grammarAccess.getForbiddenBlockAccess().getForb_methodsAssignment()); }
		)
		(
			{ before(grammarAccess.getForbiddenBlockAccess().getForb_methodsAssignment()); }
			(rule__ForbiddenBlock__Forb_methodsAssignment)*
			{ after(grammarAccess.getForbiddenBlockAccess().getForb_methodsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequiredBlock
entryRuleRequiredBlock
:
{ before(grammarAccess.getRequiredBlockRule()); }
	 ruleRequiredBlock
{ after(grammarAccess.getRequiredBlockRule()); } 
	 EOF 
;

// Rule RequiredBlock
ruleRequiredBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getRequiredBlockAccess().getReq_eventAssignment()); }
			(rule__RequiredBlock__Req_eventAssignment)
			{ after(grammarAccess.getRequiredBlockAccess().getReq_eventAssignment()); }
		)
		(
			{ before(grammarAccess.getRequiredBlockAccess().getReq_eventAssignment()); }
			(rule__RequiredBlock__Req_eventAssignment)*
			{ after(grammarAccess.getRequiredBlockAccess().getReq_eventAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnforceConsBlock
entryRuleEnforceConsBlock
:
{ before(grammarAccess.getEnforceConsBlockRule()); }
	 ruleEnforceConsBlock
{ after(grammarAccess.getEnforceConsBlockRule()); } 
	 EOF 
;

// Rule EnforceConsBlock
ruleEnforceConsBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getEnforceConsBlockAccess().getGroup()); }
			(rule__EnforceConsBlock__Group__0)
			{ after(grammarAccess.getEnforceConsBlockAccess().getGroup()); }
		)
		(
			{ before(grammarAccess.getEnforceConsBlockAccess().getGroup()); }
			(rule__EnforceConsBlock__Group__0)*
			{ after(grammarAccess.getEnforceConsBlockAccess().getGroup()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequiresBlock
entryRuleRequiresBlock
:
{ before(grammarAccess.getRequiresBlockRule()); }
	 ruleRequiresBlock
{ after(grammarAccess.getRequiresBlockRule()); } 
	 EOF 
;

// Rule RequiresBlock
ruleRequiresBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getRequiresBlockAccess().getGroup()); }
			(rule__RequiresBlock__Group__0)
			{ after(grammarAccess.getRequiresBlockAccess().getGroup()); }
		)
		(
			{ before(grammarAccess.getRequiresBlockAccess().getGroup()); }
			(rule__RequiresBlock__Group__0)*
			{ after(grammarAccess.getRequiresBlockAccess().getGroup()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnsuresBlock
entryRuleEnsuresBlock
:
{ before(grammarAccess.getEnsuresBlockRule()); }
	 ruleEnsuresBlock
{ after(grammarAccess.getEnsuresBlockRule()); } 
	 EOF 
;

// Rule EnsuresBlock
ruleEnsuresBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getEnsuresBlockAccess().getGroup()); }
			(rule__EnsuresBlock__Group__0)
			{ after(grammarAccess.getEnsuresBlockAccess().getGroup()); }
		)
		(
			{ before(grammarAccess.getEnsuresBlockAccess().getGroup()); }
			(rule__EnsuresBlock__Group__0)*
			{ after(grammarAccess.getEnsuresBlockAccess().getGroup()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDestroysBlock
entryRuleDestroysBlock
:
{ before(grammarAccess.getDestroysBlockRule()); }
	 ruleDestroysBlock
{ after(grammarAccess.getDestroysBlockRule()); } 
	 EOF 
;

// Rule DestroysBlock
ruleDestroysBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getDestroysBlockAccess().getGroup()); }
			(rule__DestroysBlock__Group__0)
			{ after(grammarAccess.getDestroysBlockAccess().getGroup()); }
		)
		(
			{ before(grammarAccess.getDestroysBlockAccess().getGroup()); }
			(rule__DestroysBlock__Group__0)*
			{ after(grammarAccess.getDestroysBlockAccess().getGroup()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectDecl
entryRuleObjectDecl
:
{ before(grammarAccess.getObjectDeclRule()); }
	 ruleObjectDecl
{ after(grammarAccess.getObjectDeclRule()); } 
	 EOF 
;

// Rule ObjectDecl
ruleObjectDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectDeclAccess().getAlternatives()); }
		(rule__ObjectDecl__Alternatives)
		{ after(grammarAccess.getObjectDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJvmParameterizedTypeRef
entryRuleJvmParameterizedTypeRef
:
{ before(grammarAccess.getJvmParameterizedTypeRefRule()); }
	 ruleJvmParameterizedTypeRef
{ after(grammarAccess.getJvmParameterizedTypeRefRule()); } 
	 EOF 
;

// Rule JvmParameterizedTypeRef
ruleJvmParameterizedTypeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getGroup()); }
		(rule__JvmParameterizedTypeRef__Group__0)*
		{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJvmArgumentTypeRef
entryRuleJvmArgumentTypeRef
:
{ before(grammarAccess.getJvmArgumentTypeRefRule()); }
	 ruleJvmArgumentTypeRef
{ after(grammarAccess.getJvmArgumentTypeRefRule()); } 
	 EOF 
;

// Rule JvmArgumentTypeRef
ruleJvmArgumentTypeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJvmArgumentTypeRefAccess().getAlternatives()); }
		(rule__JvmArgumentTypeRef__Alternatives)
		{ after(grammarAccess.getJvmArgumentTypeRefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJvmWildcardTypeRef
entryRuleJvmWildcardTypeRef
:
{ before(grammarAccess.getJvmWildcardTypeRefRule()); }
	 ruleJvmWildcardTypeRef
{ after(grammarAccess.getJvmWildcardTypeRefRule()); } 
	 EOF 
;

// Rule JvmWildcardTypeRef
ruleJvmWildcardTypeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJvmWildcardTypeRefAccess().getGroup()); }
		(rule__JvmWildcardTypeRef__Group__0)
		{ after(grammarAccess.getJvmWildcardTypeRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForbMethod
entryRuleForbMethod
:
{ before(grammarAccess.getForbMethodRule()); }
	 ruleForbMethod
{ after(grammarAccess.getForbMethodRule()); } 
	 EOF 
;

// Rule ForbMethod
ruleForbMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForbMethodAccess().getGroup()); }
		(rule__ForbMethod__Group__0)
		{ after(grammarAccess.getForbMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFQN
entryRuleFQN
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFQNAccess().getGroup()); }
		(rule__FQN__Group__0)
		{ after(grammarAccess.getFQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQN
entryRuleQN
:
{ before(grammarAccess.getQNRule()); }
	 ruleQN
{ after(grammarAccess.getQNRule()); } 
	 EOF 
;

// Rule QN
ruleQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQNAccess().getGroup()); }
		(rule__QN__Group__0)
		{ after(grammarAccess.getQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getAlternatives()); }
		(rule__Event__Alternatives)
		{ after(grammarAccess.getEventAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabelMethodCall
entryRuleLabelMethodCall
:
{ before(grammarAccess.getLabelMethodCallRule()); }
	 ruleLabelMethodCall
{ after(grammarAccess.getLabelMethodCallRule()); } 
	 EOF 
;

// Rule LabelMethodCall
ruleLabelMethodCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelMethodCallAccess().getGroup()); }
		(rule__LabelMethodCall__Group__0)
		{ after(grammarAccess.getLabelMethodCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethod
entryRuleMethod
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAccess().getGroup()); }
		(rule__Method__Group__0)
		{ after(grammarAccess.getMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParList
entryRuleParList
:
{ before(grammarAccess.getParListRule()); }
	 ruleParList
{ after(grammarAccess.getParListRule()); } 
	 EOF 
;

// Rule ParList
ruleParList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParListAccess().getGroup()); }
		(rule__ParList__Group__0)
		{ after(grammarAccess.getParListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePar
entryRulePar
:
{ before(grammarAccess.getParRule()); }
	 rulePar
{ after(grammarAccess.getParRule()); } 
	 EOF 
;

// Rule Par
rulePar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParAccess().getGroup()); }
		(rule__Par__Group__0)
		{ after(grammarAccess.getParAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAggregate
entryRuleAggregate
:
{ before(grammarAccess.getAggregateRule()); }
	 ruleAggregate
{ after(grammarAccess.getAggregateRule()); } 
	 EOF 
;

// Rule Aggregate
ruleAggregate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAggregateAccess().getGroup()); }
		(rule__Aggregate__Group__0)
		{ after(grammarAccess.getAggregateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrder
entryRuleOrder
:
{ before(grammarAccess.getOrderRule()); }
	 ruleOrder
{ after(grammarAccess.getOrderRule()); } 
	 EOF 
;

// Rule Order
ruleOrder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderAccess().getAlternatives()); }
		(rule__Order__Alternatives)
		{ after(grammarAccess.getOrderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleOrder
entryRuleSimpleOrder
:
{ before(grammarAccess.getSimpleOrderRule()); }
	 ruleSimpleOrder
{ after(grammarAccess.getSimpleOrderRule()); } 
	 EOF 
;

// Rule SimpleOrder
ruleSimpleOrder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleOrderAccess().getGroup()); }
		(rule__SimpleOrder__Group__0)
		{ after(grammarAccess.getSimpleOrderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraint
entryRuleConstraint
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintAccess().getLogicalImplyExpressionParserRuleCall()); }
		ruleLogicalImplyExpression
		{ after(grammarAccess.getConstraintAccess().getLogicalImplyExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalImplyExpression
entryRuleLogicalImplyExpression
:
{ before(grammarAccess.getLogicalImplyExpressionRule()); }
	 ruleLogicalImplyExpression
{ after(grammarAccess.getLogicalImplyExpressionRule()); } 
	 EOF 
;

// Rule LogicalImplyExpression
ruleLogicalImplyExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalImplyExpressionAccess().getGroup()); }
		(rule__LogicalImplyExpression__Group__0)
		{ after(grammarAccess.getLogicalImplyExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalImply
entryRuleLogicalImply
:
{ before(grammarAccess.getLogicalImplyRule()); }
	 ruleLogicalImply
{ after(grammarAccess.getLogicalImplyRule()); } 
	 EOF 
;

// Rule LogicalImply
ruleLogicalImply 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalImplyAccess().getIMPLIESAssignment()); }
		(rule__LogicalImply__IMPLIESAssignment)
		{ after(grammarAccess.getLogicalImplyAccess().getIMPLIESAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalOrExpression
entryRuleLogicalOrExpression
:
{ before(grammarAccess.getLogicalOrExpressionRule()); }
	 ruleLogicalOrExpression
{ after(grammarAccess.getLogicalOrExpressionRule()); } 
	 EOF 
;

// Rule LogicalOrExpression
ruleLogicalOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
		(rule__LogicalOrExpression__Group__0)
		{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalOr
entryRuleLogicalOr
:
{ before(grammarAccess.getLogicalOrRule()); }
	 ruleLogicalOr
{ after(grammarAccess.getLogicalOrRule()); } 
	 EOF 
;

// Rule LogicalOr
ruleLogicalOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalOrAccess().getORAssignment()); }
		(rule__LogicalOr__ORAssignment)
		{ after(grammarAccess.getLogicalOrAccess().getORAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression
:
{ before(grammarAccess.getLogicalAndExpressionRule()); }
	 ruleLogicalAndExpression
{ after(grammarAccess.getLogicalAndExpressionRule()); } 
	 EOF 
;

// Rule LogicalAndExpression
ruleLogicalAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
		(rule__LogicalAndExpression__Group__0)
		{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalAnd
entryRuleLogicalAnd
:
{ before(grammarAccess.getLogicalAndRule()); }
	 ruleLogicalAnd
{ after(grammarAccess.getLogicalAndRule()); } 
	 EOF 
;

// Rule LogicalAnd
ruleLogicalAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalAndAccess().getANDAssignment()); }
		(rule__LogicalAnd__ANDAssignment)
		{ after(grammarAccess.getLogicalAndAccess().getANDAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression
:
{ before(grammarAccess.getComparisonExpressionRule()); }
	 ruleComparisonExpression
{ after(grammarAccess.getComparisonExpressionRule()); } 
	 EOF 
;

// Rule ComparisonExpression
ruleComparisonExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup()); }
		(rule__ComparisonExpression__Group__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonHigherOpExpression
entryRuleComparisonHigherOpExpression
:
{ before(grammarAccess.getComparisonHigherOpExpressionRule()); }
	 ruleComparisonHigherOpExpression
{ after(grammarAccess.getComparisonHigherOpExpressionRule()); } 
	 EOF 
;

// Rule ComparisonHigherOpExpression
ruleComparisonHigherOpExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonHigherOpExpressionAccess().getGroup()); }
		(rule__ComparisonHigherOpExpression__Group__0)
		{ after(grammarAccess.getComparisonHigherOpExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparingRelOperator
entryRuleComparingRelOperator
:
{ before(grammarAccess.getComparingRelOperatorRule()); }
	 ruleComparingRelOperator
{ after(grammarAccess.getComparingRelOperatorRule()); } 
	 EOF 
;

// Rule ComparingRelOperator
ruleComparingRelOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparingRelOperatorAccess().getAlternatives()); }
		(rule__ComparingRelOperator__Alternatives)
		{ after(grammarAccess.getComparingRelOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression
:
{ before(grammarAccess.getArithmeticExpressionRule()); }
	 ruleArithmeticExpression
{ after(grammarAccess.getArithmeticExpressionRule()); } 
	 EOF 
;

// Rule ArithmeticExpression
ruleArithmeticExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getAdditionExpressionParserRuleCall()); }
		ruleAdditionExpression
		{ after(grammarAccess.getArithmeticExpressionAccess().getAdditionExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditionExpression
entryRuleAdditionExpression
:
{ before(grammarAccess.getAdditionExpressionRule()); }
	 ruleAdditionExpression
{ after(grammarAccess.getAdditionExpressionRule()); } 
	 EOF 
;

// Rule AdditionExpression
ruleAdditionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionExpressionAccess().getGroup()); }
		(rule__AdditionExpression__Group__0)
		{ after(grammarAccess.getAdditionExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditionOperator
entryRuleAdditionOperator
:
{ before(grammarAccess.getAdditionOperatorRule()); }
	 ruleAdditionOperator
{ after(grammarAccess.getAdditionOperatorRule()); } 
	 EOF 
;

// Rule AdditionOperator
ruleAdditionOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionOperatorAccess().getAlternatives()); }
		(rule__AdditionOperator__Alternatives)
		{ after(grammarAccess.getAdditionOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModularExpression
entryRuleModularExpression
:
{ before(grammarAccess.getModularExpressionRule()); }
	 ruleModularExpression
{ after(grammarAccess.getModularExpressionRule()); } 
	 EOF 
;

// Rule ModularExpression
ruleModularExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModularExpressionAccess().getGroup()); }
		(rule__ModularExpression__Group__0)
		{ after(grammarAccess.getModularExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModularOperator
entryRuleModularOperator
:
{ before(grammarAccess.getModularOperatorRule()); }
	 ruleModularOperator
{ after(grammarAccess.getModularOperatorRule()); } 
	 EOF 
;

// Rule ModularOperator
ruleModularOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModularOperatorAccess().getMODAssignment()); }
		(rule__ModularOperator__MODAssignment)
		{ after(grammarAccess.getModularOperatorAccess().getMODAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicationExpression
entryRuleMultiplicationExpression
:
{ before(grammarAccess.getMultiplicationExpressionRule()); }
	 ruleMultiplicationExpression
{ after(grammarAccess.getMultiplicationExpressionRule()); } 
	 EOF 
;

// Rule MultiplicationExpression
ruleMultiplicationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationExpressionAccess().getAlternatives()); }
		(rule__MultiplicationExpression__Alternatives)
		{ after(grammarAccess.getMultiplicationExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicationOperator
entryRuleMultiplicationOperator
:
{ before(grammarAccess.getMultiplicationOperatorRule()); }
	 ruleMultiplicationOperator
{ after(grammarAccess.getMultiplicationOperatorRule()); } 
	 EOF 
;

// Rule MultiplicationOperator
ruleMultiplicationOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationOperatorAccess().getAlternatives()); }
		(rule__MultiplicationOperator__Alternatives)
		{ after(grammarAccess.getMultiplicationOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryPreExpression
entryRuleUnaryPreExpression
:
{ before(grammarAccess.getUnaryPreExpressionRule()); }
	 ruleUnaryPreExpression
{ after(grammarAccess.getUnaryPreExpressionRule()); } 
	 EOF 
;

// Rule UnaryPreExpression
ruleUnaryPreExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryPreExpressionAccess().getGroup()); }
		(rule__UnaryPreExpression__Group__0)
		{ after(grammarAccess.getUnaryPreExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperand
entryRuleOperand
:
{ before(grammarAccess.getOperandRule()); }
	 ruleOperand
{ after(grammarAccess.getOperandRule()); } 
	 EOF 
;

// Rule Operand
ruleOperand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandAccess().getAlternatives()); }
		(rule__Operand__Alternatives)
		{ after(grammarAccess.getOperandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression
:
{ before(grammarAccess.getLiteralExpressionRule()); }
	 ruleLiteralExpression
{ after(grammarAccess.getLiteralExpressionRule()); } 
	 EOF 
;

// Rule LiteralExpression
ruleLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
		(rule__LiteralExpression__Alternatives)
		{ after(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreDefinedPredicates
entryRulePreDefinedPredicates
:
{ before(grammarAccess.getPreDefinedPredicatesRule()); }
	 rulePreDefinedPredicates
{ after(grammarAccess.getPreDefinedPredicatesRule()); } 
	 EOF 
;

// Rule PreDefinedPredicates
rulePreDefinedPredicates 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getAlternatives()); }
		(rule__PreDefinedPredicates__Alternatives)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJvmType
entryRuleJvmType
:
{ before(grammarAccess.getJvmTypeRule()); }
	 ruleJvmType
{ after(grammarAccess.getJvmTypeRule()); } 
	 EOF 
;

// Rule JvmType
ruleJvmType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJvmTypeAccess().getTypeAssignment()); }
		(rule__JvmType__TypeAssignment)
		{ after(grammarAccess.getJvmTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAggregateExpression
entryRuleAggregateExpression
:
{ before(grammarAccess.getAggregateExpressionRule()); }
	 ruleAggregateExpression
{ after(grammarAccess.getAggregateExpressionRule()); } 
	 EOF 
;

// Rule AggregateExpression
ruleAggregateExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAggregateExpressionAccess().getGroup()); }
		(rule__AggregateExpression__Group__0)
		{ after(grammarAccess.getAggregateExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getGroup()); }
		(rule__Literal__Group__0)
		{ after(grammarAccess.getLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getAlternatives()); }
		(rule__IntegerLiteral__Alternatives)
		{ after(grammarAccess.getIntegerLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
		(rule__BooleanLiteral__Alternatives)
		{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryPreOperator
entryRuleUnaryPreOperator
:
{ before(grammarAccess.getUnaryPreOperatorRule()); }
	 ruleUnaryPreOperator
{ after(grammarAccess.getUnaryPreOperatorRule()); } 
	 EOF 
;

// Rule UnaryPreOperator
ruleUnaryPreOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryPreOperatorAccess().getNOTAssignment()); }
		(rule__UnaryPreOperator__NOTAssignment)
		{ after(grammarAccess.getUnaryPreOperatorAccess().getNOTAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparingEQNEQOperator
entryRuleComparingEQNEQOperator
:
{ before(grammarAccess.getComparingEQNEQOperatorRule()); }
	 ruleComparingEQNEQOperator
{ after(grammarAccess.getComparingEQNEQOperatorRule()); } 
	 EOF 
;

// Rule ComparingEQNEQOperator
ruleComparingEQNEQOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparingEQNEQOperatorAccess().getAlternatives()); }
		(rule__ComparingEQNEQOperator__Alternatives)
		{ after(grammarAccess.getComparingEQNEQOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCons
entryRuleCons
:
{ before(grammarAccess.getConsRule()); }
	 ruleCons
{ after(grammarAccess.getConsRule()); } 
	 EOF 
;

// Rule Cons
ruleCons 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConsAccess().getAlternatives()); }
		(rule__Cons__Alternatives)
		{ after(grammarAccess.getConsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayElements
entryRuleArrayElements
:
{ before(grammarAccess.getArrayElementsRule()); }
	 ruleArrayElements
{ after(grammarAccess.getArrayElementsRule()); } 
	 EOF 
;

// Rule ArrayElements
ruleArrayElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayElementsAccess().getAlternatives()); }
		(rule__ArrayElements__Alternatives)
		{ after(grammarAccess.getArrayElementsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConsPred
entryRuleConsPred
:
{ before(grammarAccess.getConsPredRule()); }
	 ruleConsPred
{ after(grammarAccess.getConsPredRule()); } 
	 EOF 
;

// Rule ConsPred
ruleConsPred 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConsPredAccess().getAlternatives()); }
		(rule__ConsPred__Alternatives)
		{ after(grammarAccess.getConsPredAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLitList
entryRuleLitList
:
{ before(grammarAccess.getLitListRule()); }
	 ruleLitList
{ after(grammarAccess.getLitListRule()); } 
	 EOF 
;

// Rule LitList
ruleLitList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLitListAccess().getGroup()); }
		(rule__LitList__Group__0)
		{ after(grammarAccess.getLitListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePred
entryRulePred
:
{ before(grammarAccess.getPredRule()); }
	 rulePred
{ after(grammarAccess.getPredRule()); } 
	 EOF 
;

// Rule Pred
rulePred 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredAccess().getGroup()); }
		(rule__Pred__Group__0)
		{ after(grammarAccess.getPredAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReqPred
entryRuleReqPred
:
{ before(grammarAccess.getReqPredRule()); }
	 ruleReqPred
{ after(grammarAccess.getReqPredRule()); } 
	 EOF 
;

// Rule ReqPred
ruleReqPred 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReqPredAccess().getGroup()); }
		(rule__ReqPred__Group__0)
		{ after(grammarAccess.getReqPredAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredLit
entryRulePredLit
:
{ before(grammarAccess.getPredLitRule()); }
	 rulePredLit
{ after(grammarAccess.getPredLitRule()); } 
	 EOF 
;

// Rule PredLit
rulePredLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredLitAccess().getGroup()); }
		(rule__PredLit__Group__0)
		{ after(grammarAccess.getPredLitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnsPred
entryRuleEnsPred
:
{ before(grammarAccess.getEnsPredRule()); }
	 ruleEnsPred
{ after(grammarAccess.getEnsPredRule()); } 
	 EOF 
;

// Rule EnsPred
ruleEnsPred 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnsPredAccess().getGroup()); }
		(rule__EnsPred__Group__0)
		{ after(grammarAccess.getEnsPredAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuParList
entryRuleSuParList
:
{ before(grammarAccess.getSuParListRule()); }
	 ruleSuParList
{ after(grammarAccess.getSuParListRule()); } 
	 EOF 
;

// Rule SuParList
ruleSuParList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuParListAccess().getGroup()); }
		(rule__SuParList__Group__0)
		{ after(grammarAccess.getSuParListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuPar
entryRuleSuPar
:
{ before(grammarAccess.getSuParRule()); }
	 ruleSuPar
{ after(grammarAccess.getSuParRule()); } 
	 EOF 
;

// Rule SuPar
ruleSuPar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuParAccess().getGroup()); }
		(rule__SuPar__Group__0)
		{ after(grammarAccess.getSuParAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObject
entryRuleObject
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectAccess().getGroup()); }
		(rule__Object__Group__0)
		{ after(grammarAccess.getObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference
:
{ before(grammarAccess.getJvmTypeReferenceRule()); }
	 ruleJvmTypeReference
{ after(grammarAccess.getJvmTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJvmTypeReferenceAccess().getAlternatives()); }
		(rule__JvmTypeReference__Alternatives)
		{ after(grammarAccess.getJvmTypeReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayBrackets
entryRuleArrayBrackets
:
{ before(grammarAccess.getArrayBracketsRule()); }
	 ruleArrayBrackets
{ after(grammarAccess.getArrayBracketsRule()); } 
	 EOF 
;

// Rule ArrayBrackets
ruleArrayBrackets 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayBracketsAccess().getGroup()); }
		(rule__ArrayBrackets__Group__0)
		{ after(grammarAccess.getArrayBracketsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef
:
{ before(grammarAccess.getXFunctionTypeRefRule()); }
	 ruleXFunctionTypeRef
{ after(grammarAccess.getXFunctionTypeRefRule()); } 
	 EOF 
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup()); }
		(rule__XFunctionTypeRef__Group__0)
		{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference
:
{ before(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	 ruleJvmParameterizedTypeReference
{ after(grammarAccess.getJvmParameterizedTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup()); }
		(rule__JvmParameterizedTypeReference__Group__0)
		{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference
:
{ before(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	 ruleJvmArgumentTypeReference
{ after(grammarAccess.getJvmArgumentTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getAlternatives()); }
		(rule__JvmArgumentTypeReference__Alternatives)
		{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference
:
{ before(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	 ruleJvmWildcardTypeReference
{ after(grammarAccess.getJvmWildcardTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup()); }
		(rule__JvmWildcardTypeReference__Group__0)
		{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound
:
{ before(grammarAccess.getJvmUpperBoundRule()); }
	 ruleJvmUpperBound
{ after(grammarAccess.getJvmUpperBoundRule()); } 
	 EOF 
;

// Rule JvmUpperBound
ruleJvmUpperBound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJvmUpperBoundAccess().getGroup()); }
		(rule__JvmUpperBound__Group__0)
		{ after(grammarAccess.getJvmUpperBoundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded
:
{ before(grammarAccess.getJvmUpperBoundAndedRule()); }
	 ruleJvmUpperBoundAnded
{ after(grammarAccess.getJvmUpperBoundAndedRule()); } 
	 EOF 
;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJvmUpperBoundAndedAccess().getGroup()); }
		(rule__JvmUpperBoundAnded__Group__0)
		{ after(grammarAccess.getJvmUpperBoundAndedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound
:
{ before(grammarAccess.getJvmLowerBoundRule()); }
	 ruleJvmLowerBound
{ after(grammarAccess.getJvmLowerBoundRule()); } 
	 EOF 
;

// Rule JvmLowerBound
ruleJvmLowerBound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJvmLowerBoundAccess().getGroup()); }
		(rule__JvmLowerBound__Group__0)
		{ after(grammarAccess.getJvmLowerBoundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJvmLowerBoundAnded
entryRuleJvmLowerBoundAnded
:
{ before(grammarAccess.getJvmLowerBoundAndedRule()); }
	 ruleJvmLowerBoundAnded
{ after(grammarAccess.getJvmLowerBoundAndedRule()); } 
	 EOF 
;

// Rule JvmLowerBoundAnded
ruleJvmLowerBoundAnded 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJvmLowerBoundAndedAccess().getGroup()); }
		(rule__JvmLowerBoundAnded__Group__0)
		{ after(grammarAccess.getJvmLowerBoundAndedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValidID
entryRuleValidID
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXImportDeclaration
entryRuleXImportDeclaration
:
{ before(grammarAccess.getXImportDeclarationRule()); }
	 ruleXImportDeclaration
{ after(grammarAccess.getXImportDeclarationRule()); } 
	 EOF 
;

// Rule XImportDeclaration
ruleXImportDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXImportDeclarationAccess().getGroup()); }
		(rule__XImportDeclaration__Group__0)
		{ after(grammarAccess.getXImportDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameInStaticImport
entryRuleQualifiedNameInStaticImport
:
{ before(grammarAccess.getQualifiedNameInStaticImportRule()); }
	 ruleQualifiedNameInStaticImport
{ after(grammarAccess.getQualifiedNameInStaticImportRule()); } 
	 EOF 
;

// Rule QualifiedNameInStaticImport
ruleQualifiedNameInStaticImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
			(rule__QualifiedNameInStaticImport__Group__0)
			{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
		)
		(
			{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
			(rule__QualifiedNameInStaticImport__Group__0)*
			{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getArrayAssignment_2_0()); }
		(rule__Domainmodel__ArrayAssignment_2_0)
		{ after(grammarAccess.getDomainmodelAccess().getArrayAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getDomainmodelAccess().getGroup_2_1()); }
		(rule__Domainmodel__Group_2_1__0)
		{ after(grammarAccess.getDomainmodelAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclAccess().getGroup_0()); }
		(rule__ObjectDecl__Group_0__0)
		{ after(grammarAccess.getObjectDeclAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectDeclAccess().getAsteriskKeyword_1()); }
		'*'
		{ after(grammarAccess.getObjectDeclAccess().getAsteriskKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclAccess().getArrayAssignment_0_1_0()); }
		(rule__ObjectDecl__ArrayAssignment_0_1_0)
		{ after(grammarAccess.getObjectDeclAccess().getArrayAssignment_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectDeclAccess().getGroup_0_1_1()); }
		(rule__ObjectDecl__Group_0_1_1__0)
		{ after(grammarAccess.getObjectDeclAccess().getGroup_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmArgumentTypeRef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmArgumentTypeRefAccess().getTypeAssignment_0()); }
		(rule__JvmArgumentTypeRef__TypeAssignment_0)
		{ after(grammarAccess.getJvmArgumentTypeRefAccess().getTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getJvmArgumentTypeRefAccess().getTypeAssignment_1()); }
		(rule__JvmArgumentTypeRef__TypeAssignment_1)
		{ after(grammarAccess.getJvmArgumentTypeRefAccess().getTypeAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeRef__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmWildcardTypeRefAccess().getQuestionMarkKeyword_1_0()); }
		'?'
		{ after(grammarAccess.getJvmWildcardTypeRefAccess().getQuestionMarkKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getJvmWildcardTypeRefAccess().getTKeyword_1_1()); }
		'T'
		{ after(grammarAccess.getJvmWildcardTypeRefAccess().getTKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getJvmWildcardTypeRefAccess().getEKeyword_1_2()); }
		'E'
		{ after(grammarAccess.getJvmWildcardTypeRefAccess().getEKeyword_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getLabelMethodCallParserRuleCall_0()); }
		ruleLabelMethodCall
		{ after(grammarAccess.getEventAccess().getLabelMethodCallParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventAccess().getAggregateParserRuleCall_1()); }
		ruleAggregate
		{ after(grammarAccess.getEventAccess().getAggregateParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getEventAccess().getAsteriskKeyword_2()); }
		'*'
		{ after(grammarAccess.getEventAccess().getAsteriskKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Par__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParAccess().getValAssignment_1_0()); }
		(rule__Par__ValAssignment_1_0)
		{ after(grammarAccess.getParAccess().getValAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getParAccess().get_Keyword_1_1()); }
		'_'
		{ after(grammarAccess.getParAccess().get_Keyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getGroup_0()); }
		(rule__Order__Group_0__0)
		{ after(grammarAccess.getOrderAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrderAccess().getAsteriskKeyword_1()); }
		'*'
		{ after(grammarAccess.getOrderAccess().getAsteriskKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ElementopAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getElementopPlusSignKeyword_0_1_0_0()); }
		'+'
		{ after(grammarAccess.getPrimaryAccess().getElementopPlusSignKeyword_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getElementopQuestionMarkKeyword_0_1_0_1()); }
		'?'
		{ after(grammarAccess.getPrimaryAccess().getElementopQuestionMarkKeyword_0_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getElementopAsteriskKeyword_0_1_0_2()); }
		'*'
		{ after(grammarAccess.getPrimaryAccess().getElementopAsteriskKeyword_0_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ElementopAlternatives_1_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getElementopPlusSignKeyword_1_3_0_0()); }
		'+'
		{ after(grammarAccess.getPrimaryAccess().getElementopPlusSignKeyword_1_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getElementopQuestionMarkKeyword_1_3_0_1()); }
		'?'
		{ after(grammarAccess.getPrimaryAccess().getElementopQuestionMarkKeyword_1_3_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getElementopAsteriskKeyword_1_3_0_2()); }
		'*'
		{ after(grammarAccess.getPrimaryAccess().getElementopAsteriskKeyword_1_3_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparingRelOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparingRelOperatorAccess().getLESSAssignment_0()); }
		(rule__ComparingRelOperator__LESSAssignment_0)
		{ after(grammarAccess.getComparingRelOperatorAccess().getLESSAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparingRelOperatorAccess().getLESS_OR_EQUALAssignment_1()); }
		(rule__ComparingRelOperator__LESS_OR_EQUALAssignment_1)
		{ after(grammarAccess.getComparingRelOperatorAccess().getLESS_OR_EQUALAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparingRelOperatorAccess().getGREATER_OR_EQUALAssignment_2()); }
		(rule__ComparingRelOperator__GREATER_OR_EQUALAssignment_2)
		{ after(grammarAccess.getComparingRelOperatorAccess().getGREATER_OR_EQUALAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparingRelOperatorAccess().getGREATERAssignment_3()); }
		(rule__ComparingRelOperator__GREATERAssignment_3)
		{ after(grammarAccess.getComparingRelOperatorAccess().getGREATERAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionOperatorAccess().getPLUSAssignment_0()); }
		(rule__AdditionOperator__PLUSAssignment_0)
		{ after(grammarAccess.getAdditionOperatorAccess().getPLUSAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionOperatorAccess().getMINUSAssignment_1()); }
		(rule__AdditionOperator__MINUSAssignment_1)
		{ after(grammarAccess.getAdditionOperatorAccess().getMINUSAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationExpressionAccess().getUnaryPreExpressionParserRuleCall_0()); }
		ruleUnaryPreExpression
		{ after(grammarAccess.getMultiplicationExpressionAccess().getUnaryPreExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationExpressionAccess().getGroup_1()); }
		(rule__MultiplicationExpression__Group_1__0)
		{ after(grammarAccess.getMultiplicationExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationOperatorAccess().getTIMESAssignment_0()); }
		(rule__MultiplicationOperator__TIMESAssignment_0)
		{ after(grammarAccess.getMultiplicationOperatorAccess().getTIMESAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationOperatorAccess().getDIVIDEAssignment_1()); }
		(rule__MultiplicationOperator__DIVIDEAssignment_1)
		{ after(grammarAccess.getMultiplicationOperatorAccess().getDIVIDEAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getGroup_0()); }
		(rule__Operand__Group_0__0)
		{ after(grammarAccess.getOperandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getConsParserRuleCall_1()); }
		ruleCons
		{ after(grammarAccess.getOperandAccess().getConsParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getNameAssignment_0()); }
		(rule__LiteralExpression__NameAssignment_0)
		{ after(grammarAccess.getLiteralExpressionAccess().getNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getNameAssignment_1()); }
		(rule__LiteralExpression__NameAssignment_1)
		{ after(grammarAccess.getLiteralExpressionAccess().getNameAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getPreDefinedPredicatesParserRuleCall_2()); }
		rulePreDefinedPredicates
		{ after(grammarAccess.getLiteralExpressionAccess().getPreDefinedPredicatesParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getGroup_0()); }
		(rule__PreDefinedPredicates__Group_0__0)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getGroup_1()); }
		(rule__PreDefinedPredicates__Group_1__0)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getGroup_2()); }
		(rule__PreDefinedPredicates__Group_2__0)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getGroup_3()); }
		(rule__PreDefinedPredicates__Group_3__0)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getGroup_4()); }
		(rule__PreDefinedPredicates__Group_4__0)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getGroup_5()); }
		(rule__PreDefinedPredicates__Group_5__0)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getValStringLiteralParserRuleCall_1_0_0()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralAccess().getValStringLiteralParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getValIntegerLiteralParserRuleCall_1_0_1()); }
		ruleIntegerLiteral
		{ after(grammarAccess.getLiteralAccess().getValIntegerLiteralParserRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getValBooleanLiteralParserRuleCall_1_0_2()); }
		ruleBooleanLiteral
		{ after(grammarAccess.getLiteralAccess().getValBooleanLiteralParserRuleCall_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getGroup_1()); }
		(rule__IntegerLiteral__Group_1__0)
		{ after(grammarAccess.getIntegerLiteralAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBooleanLiteralAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparingEQNEQOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparingEQNEQOperatorAccess().getEQUALAssignment_0()); }
		(rule__ComparingEQNEQOperator__EQUALAssignment_0)
		{ after(grammarAccess.getComparingEQNEQOperatorAccess().getEQUALAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparingEQNEQOperatorAccess().getUNEQUALAssignment_1()); }
		(rule__ComparingEQNEQOperator__UNEQUALAssignment_1)
		{ after(grammarAccess.getComparingEQNEQOperatorAccess().getUNEQUALAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cons__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsAccess().getGroup_0()); }
		(rule__Cons__Group_0__0)
		{ after(grammarAccess.getConsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConsAccess().getConsAssignment_1()); }
		(rule__Cons__ConsAssignment_1)
		{ after(grammarAccess.getConsAccess().getConsAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElements__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayElementsAccess().getGroup_0()); }
		(rule__ArrayElements__Group_0__0)
		{ after(grammarAccess.getArrayElementsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayElementsAccess().getConsAssignment_1()); }
		(rule__ArrayElements__ConsAssignment_1)
		{ after(grammarAccess.getArrayElementsAccess().getConsAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsPredAccess().getAlternatives_0()); }
		(rule__ConsPred__Alternatives_0)
		{ after(grammarAccess.getConsPredAccess().getAlternatives_0()); }
	)
	|
	(
		{ before(grammarAccess.getConsPredAccess().getGroup_1()); }
		(rule__ConsPred__Group_1__0)
		{ after(grammarAccess.getConsPredAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConsPredAccess().getLitAssignment_2()); }
		(rule__ConsPred__LitAssignment_2)
		{ after(grammarAccess.getConsPredAccess().getLitAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsPredAccess().getGroup_0_0()); }
		(rule__ConsPred__Group_0_0__0)
		{ after(grammarAccess.getConsPredAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConsPredAccess().getGroup_0_1()); }
		(rule__ConsPred__Group_0_1__0)
		{ after(grammarAccess.getConsPredAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getConsPredAccess().getGroup_0_2()); }
		(rule__ConsPred__Group_0_2__0)
		{ after(grammarAccess.getConsPredAccess().getGroup_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LitList__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLitListAccess().getParametersAssignment_1_1_0()); }
		(rule__LitList__ParametersAssignment_1_1_0)
		{ after(grammarAccess.getLitListAccess().getParametersAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getLitListAccess().getFullStopFullStopFullStopKeyword_1_1_1()); }
		'...'
		{ after(grammarAccess.getLitListAccess().getFullStopFullStopFullStopKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredAccess().getGroup_1_0()); }
		(rule__Pred__Group_1_0__0)
		{ after(grammarAccess.getPredAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredAccess().getLeftSquareBracketRightSquareBracketKeyword_1_1()); }
		'[]'
		{ after(grammarAccess.getPredAccess().getLeftSquareBracketRightSquareBracketKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuPar__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuParAccess().getValAssignment_1_0()); }
		(rule__SuPar__ValAssignment_1_0)
		{ after(grammarAccess.getSuParAccess().getValAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSuParAccess().get_Keyword_1_1()); }
		'_'
		{ after(grammarAccess.getSuParAccess().get_Keyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getSuParAccess().getThisKeyword_1_2()); }
		'this'
		{ after(grammarAccess.getSuParAccess().getThisKeyword_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0()); }
		(rule__JvmTypeReference__Group_0__0)
		{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); }
		ruleXFunctionTypeRef
		{ after(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmArgumentTypeReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); }
		ruleJvmTypeReference
		{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); }
		ruleJvmWildcardTypeReference
		{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_0()); }
		(rule__JvmWildcardTypeReference__Group_2_0__0)
		{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_1()); }
		(rule__JvmWildcardTypeReference__Group_2_1__0)
		{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXImportDeclarationAccess().getGroup_1_0()); }
		(rule__XImportDeclaration__Group_1_0__0)
		{ after(grammarAccess.getXImportDeclarationAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_1()); }
		(rule__XImportDeclaration__ImportedTypeAssignment_1_1)
		{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceAssignment_1_2()); }
		(rule__XImportDeclaration__ImportedNamespaceAssignment_1_2)
		{ after(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Alternatives_1_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXImportDeclarationAccess().getWildcardAssignment_1_0_3_0()); }
		(rule__XImportDeclaration__WildcardAssignment_1_0_3_0)
		{ after(grammarAccess.getXImportDeclarationAccess().getWildcardAssignment_1_0_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getXImportDeclarationAccess().getMemberNameAssignment_1_0_3_1()); }
		(rule__XImportDeclaration__MemberNameAssignment_1_0_3_1)
		{ after(grammarAccess.getXImportDeclarationAccess().getMemberNameAssignment_1_0_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__0__Impl
	rule__Domainmodel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getSPECKeyword_0()); }
	'SPEC'
	{ after(grammarAccess.getDomainmodelAccess().getSPECKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__1__Impl
	rule__Domainmodel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getJavaTypeAssignment_1()); }
	(rule__Domainmodel__JavaTypeAssignment_1)
	{ after(grammarAccess.getDomainmodelAccess().getJavaTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__2__Impl
	rule__Domainmodel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getAlternatives_2()); }
	(rule__Domainmodel__Alternatives_2)?
	{ after(grammarAccess.getDomainmodelAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__3__Impl
	rule__Domainmodel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getOBJECTSKeyword_3()); }
	'OBJECTS'
	{ after(grammarAccess.getDomainmodelAccess().getOBJECTSKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__4__Impl
	rule__Domainmodel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getUsageAssignment_4()); }
	(rule__Domainmodel__UsageAssignment_4)
	{ after(grammarAccess.getDomainmodelAccess().getUsageAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__5__Impl
	rule__Domainmodel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getGroup_5()); }
	(rule__Domainmodel__Group_5__0)?
	{ after(grammarAccess.getDomainmodelAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__6__Impl
	rule__Domainmodel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getEVENTSKeyword_6()); }
	'EVENTS'
	{ after(grammarAccess.getDomainmodelAccess().getEVENTSKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__7__Impl
	rule__Domainmodel__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getReq_eventsAssignment_7()); }
	(rule__Domainmodel__Req_eventsAssignment_7)
	{ after(grammarAccess.getDomainmodelAccess().getReq_eventsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__8__Impl
	rule__Domainmodel__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getORDERKeyword_8()); }
	'ORDER'
	{ after(grammarAccess.getDomainmodelAccess().getORDERKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__9__Impl
	rule__Domainmodel__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getOrderAssignment_9()); }
	(rule__Domainmodel__OrderAssignment_9)
	{ after(grammarAccess.getDomainmodelAccess().getOrderAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__10__Impl
	rule__Domainmodel__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getGroup_10()); }
	(rule__Domainmodel__Group_10__0)?
	{ after(grammarAccess.getDomainmodelAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__11__Impl
	rule__Domainmodel__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getGroup_11()); }
	(rule__Domainmodel__Group_11__0)?
	{ after(grammarAccess.getDomainmodelAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__12__Impl
	rule__Domainmodel__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getGroup_12()); }
	(rule__Domainmodel__Group_12__0)?
	{ after(grammarAccess.getDomainmodelAccess().getGroup_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getGroup_13()); }
	(rule__Domainmodel__Group_13__0)?
	{ after(grammarAccess.getDomainmodelAccess().getGroup_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group_2_1__0__Impl
	rule__Domainmodel__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getLessThanSignKeyword_2_1_0()); }
	'<'
	{ after(grammarAccess.getDomainmodelAccess().getLessThanSignKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group_2_1__1__Impl
	rule__Domainmodel__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getCollectionAssignment_2_1_1()); }
	(rule__Domainmodel__CollectionAssignment_2_1_1)
	{ after(grammarAccess.getDomainmodelAccess().getCollectionAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getGreaterThanSignKeyword_2_1_2()); }
	'>'
	{ after(grammarAccess.getDomainmodelAccess().getGreaterThanSignKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group_5__0__Impl
	rule__Domainmodel__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getFORBIDDENKeyword_5_0()); }
	'FORBIDDEN'
	{ after(grammarAccess.getDomainmodelAccess().getFORBIDDENKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getForbEventAssignment_5_1()); }
	(rule__Domainmodel__ForbEventAssignment_5_1)
	{ after(grammarAccess.getDomainmodelAccess().getForbEventAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group_10__0__Impl
	rule__Domainmodel__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getCONSTRAINTSKeyword_10_0()); }
	'CONSTRAINTS'
	{ after(grammarAccess.getDomainmodelAccess().getCONSTRAINTSKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getReqConstraintsAssignment_10_1()); }
	(rule__Domainmodel__ReqConstraintsAssignment_10_1)
	{ after(grammarAccess.getDomainmodelAccess().getReqConstraintsAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group_11__0__Impl
	rule__Domainmodel__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getREQUIRESKeyword_11_0()); }
	'REQUIRES'
	{ after(grammarAccess.getDomainmodelAccess().getREQUIRESKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getRequireAssignment_11_1()); }
	(rule__Domainmodel__RequireAssignment_11_1)
	{ after(grammarAccess.getDomainmodelAccess().getRequireAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group_12__0__Impl
	rule__Domainmodel__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getENSURESKeyword_12_0()); }
	'ENSURES'
	{ after(grammarAccess.getDomainmodelAccess().getENSURESKeyword_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getEnsureAssignment_12_1()); }
	(rule__Domainmodel__EnsureAssignment_12_1)
	{ after(grammarAccess.getDomainmodelAccess().getEnsureAssignment_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group_13__0__Impl
	rule__Domainmodel__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getNEGATESKeyword_13_0()); }
	'NEGATES'
	{ after(grammarAccess.getDomainmodelAccess().getNEGATESKeyword_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domainmodel__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainmodelAccess().getDestroyAssignment_13_1()); }
	(rule__Domainmodel__DestroyAssignment_13_1)
	{ after(grammarAccess.getDomainmodelAccess().getDestroyAssignment_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnforceConsBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnforceConsBlock__Group__0__Impl
	rule__EnforceConsBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnforceConsBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnforceConsBlockAccess().getReqAssignment_0()); }
	(rule__EnforceConsBlock__ReqAssignment_0)
	{ after(grammarAccess.getEnforceConsBlockAccess().getReqAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnforceConsBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnforceConsBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnforceConsBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnforceConsBlockAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getEnforceConsBlockAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequiresBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequiresBlock__Group__0__Impl
	rule__RequiresBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiresBlockAccess().getPredAssignment_0()); }
	(rule__RequiresBlock__PredAssignment_0)
	{ after(grammarAccess.getRequiresBlockAccess().getPredAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequiresBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiresBlockAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getRequiresBlockAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnsuresBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnsuresBlock__Group__0__Impl
	rule__EnsuresBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnsuresBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnsuresBlockAccess().getPredAssignment_0()); }
	(rule__EnsuresBlock__PredAssignment_0)
	{ after(grammarAccess.getEnsuresBlockAccess().getPredAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnsuresBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnsuresBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnsuresBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnsuresBlockAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getEnsuresBlockAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DestroysBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestroysBlock__Group__0__Impl
	rule__DestroysBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DestroysBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestroysBlockAccess().getPredAssignment_0()); }
	(rule__DestroysBlock__PredAssignment_0)
	{ after(grammarAccess.getDestroysBlockAccess().getPredAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestroysBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestroysBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DestroysBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestroysBlockAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getDestroysBlockAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDecl__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDecl__Group_0__0__Impl
	rule__ObjectDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclAccess().getObjectTypeAssignment_0_0()); }
	(rule__ObjectDecl__ObjectTypeAssignment_0_0)
	{ after(grammarAccess.getObjectDeclAccess().getObjectTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDecl__Group_0__1__Impl
	rule__ObjectDecl__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclAccess().getAlternatives_0_1()); }
	(rule__ObjectDecl__Alternatives_0_1)?
	{ after(grammarAccess.getObjectDeclAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDecl__Group_0__2__Impl
	rule__ObjectDecl__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclAccess().getObjectNameAssignment_0_2()); }
	(rule__ObjectDecl__ObjectNameAssignment_0_2)
	{ after(grammarAccess.getObjectDeclAccess().getObjectNameAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDecl__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclAccess().getSemicolonKeyword_0_3()); }
	';'
	{ after(grammarAccess.getObjectDeclAccess().getSemicolonKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDecl__Group_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDecl__Group_0_1_1__0__Impl
	rule__ObjectDecl__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Group_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclAccess().getLessThanSignKeyword_0_1_1_0()); }
	'<'
	{ after(grammarAccess.getObjectDeclAccess().getLessThanSignKeyword_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Group_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDecl__Group_0_1_1__1__Impl
	rule__ObjectDecl__Group_0_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Group_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclAccess().getCollectionAssignment_0_1_1_1()); }
	(rule__ObjectDecl__CollectionAssignment_0_1_1_1)
	{ after(grammarAccess.getObjectDeclAccess().getCollectionAssignment_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Group_0_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectDecl__Group_0_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__Group_0_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectDeclAccess().getGreaterThanSignKeyword_0_1_1_2()); }
	'>'
	{ after(grammarAccess.getObjectDeclAccess().getGreaterThanSignKeyword_0_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeRef__Group__0__Impl
	rule__JvmParameterizedTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsAssignment_0()); }
	(rule__JvmParameterizedTypeRef__ArgumentsAssignment_0)
	{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeRef__Group__1__Impl
	rule__JvmParameterizedTypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getGroup_1()); }
	(rule__JvmParameterizedTypeRef__Group_1__0)*
	{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getGroup_2()); }
	(rule__JvmParameterizedTypeRef__Group_2__0)?
	{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeRef__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeRef__Group_1__0__Impl
	rule__JvmParameterizedTypeRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeRef__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsAssignment_1_1()); }
	(rule__JvmParameterizedTypeRef__ArgumentsAssignment_1_1)
	{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeRef__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeRef__Group_2__0__Impl
	rule__JvmParameterizedTypeRef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getLessThanSignKeyword_2_0()); }
	'<'
	{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getLessThanSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeRef__Group_2__1__Impl
	rule__JvmParameterizedTypeRef__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsAssignment_2_1()); }
	(rule__JvmParameterizedTypeRef__ArgumentsAssignment_2_1)
	{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeRef__Group_2__2__Impl
	rule__JvmParameterizedTypeRef__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getGroup_2_2()); }
	(rule__JvmParameterizedTypeRef__Group_2_2__0)*
	{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeRef__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getGreaterThanSignKeyword_2_3()); }
	'>'
	{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getGreaterThanSignKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeRef__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeRef__Group_2_2__0__Impl
	rule__JvmParameterizedTypeRef__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeRef__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsAssignment_2_2_1()); }
	(rule__JvmParameterizedTypeRef__ArgumentsAssignment_2_2_1)
	{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmWildcardTypeRef__Group__0__Impl
	rule__JvmWildcardTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmWildcardTypeRefAccess().getJvmWildcardTypeReferenceAction_0()); }
	()
	{ after(grammarAccess.getJvmWildcardTypeRefAccess().getJvmWildcardTypeReferenceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmWildcardTypeRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmWildcardTypeRefAccess().getAlternatives_1()); }
	(rule__JvmWildcardTypeRef__Alternatives_1)
	{ after(grammarAccess.getJvmWildcardTypeRefAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForbMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForbMethod__Group__0__Impl
	rule__ForbMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForbMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForbMethodAccess().getGroup_0()); }
	(rule__ForbMethod__Group_0__0)
	{ after(grammarAccess.getForbMethodAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForbMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForbMethod__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForbMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForbMethodAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getForbMethodAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForbMethod__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForbMethod__Group_0__0__Impl
	rule__ForbMethod__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForbMethod__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForbMethodAccess().getJavaMethAssignment_0_0()); }
	(rule__ForbMethod__JavaMethAssignment_0_0)
	{ after(grammarAccess.getForbMethodAccess().getJavaMethAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForbMethod__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForbMethod__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForbMethod__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForbMethodAccess().getGroup_0_1()); }
	(rule__ForbMethod__Group_0_1__0)?
	{ after(grammarAccess.getForbMethodAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForbMethod__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForbMethod__Group_0_1__0__Impl
	rule__ForbMethod__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForbMethod__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForbMethodAccess().getEqualsSignGreaterThanSignKeyword_0_1_0()); }
	'=>'
	{ after(grammarAccess.getForbMethodAccess().getEqualsSignGreaterThanSignKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForbMethod__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForbMethod__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForbMethod__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForbMethodAccess().getRepAssignment_0_1_1()); }
	(rule__ForbMethod__RepAssignment_0_1_1)
	{ after(grammarAccess.getForbMethodAccess().getRepAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getQNParserRuleCall_0()); }
	ruleQN
	{ after(grammarAccess.getFQNAccess().getQNParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__1__Impl
	rule__FQN__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFQNAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__2__Impl
	rule__FQN__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getGroup_2()); }
	(rule__FQN__Group_2__0)?
	{ after(grammarAccess.getFQNAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFQNAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_2__0__Impl
	rule__FQN__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getQNParserRuleCall_2_0()); }
	ruleQN
	{ after(grammarAccess.getFQNAccess().getQNParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getGroup_2_1()); }
	(rule__FQN__Group_2_1__0)*
	{ after(grammarAccess.getFQNAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_2_1__0__Impl
	rule__FQN__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getFQNAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getQNParserRuleCall_2_1_1()); }
	ruleQN
	{ after(grammarAccess.getFQNAccess().getQNParserRuleCall_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QN__Group__0__Impl
	rule__QN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QN__Group__1__Impl
	rule__QN__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNAccess().getGroup_1()); }
	(rule__QN__Group_1__0)*
	{ after(grammarAccess.getQNAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QN__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNAccess().getLeftSquareBracketRightSquareBracketKeyword_2()); }
	('[]')?
	{ after(grammarAccess.getQNAccess().getLeftSquareBracketRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QN__Group_1__0__Impl
	rule__QN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LabelMethodCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelMethodCall__Group__0__Impl
	rule__LabelMethodCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelMethodCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelMethodCallAccess().getNameAssignment_0()); }
	(rule__LabelMethodCall__NameAssignment_0)
	{ after(grammarAccess.getLabelMethodCallAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelMethodCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelMethodCall__Group__1__Impl
	rule__LabelMethodCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelMethodCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelMethodCallAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLabelMethodCallAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelMethodCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelMethodCall__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelMethodCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelMethodCallAccess().getMethAssignment_2()); }
	(rule__LabelMethodCall__MethAssignment_2)
	{ after(grammarAccess.getLabelMethodCallAccess().getMethAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_0()); }
	(rule__Method__Group_0__0)?
	{ after(grammarAccess.getMethodAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getMethNameAssignment_1()); }
	(rule__Method__MethNameAssignment_1)
	{ after(grammarAccess.getMethodAccess().getMethNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getParListAssignment_3()); }
	(rule__Method__ParListAssignment_3)?
	{ after(grammarAccess.getMethodAccess().getParListAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getRightParenthesisSemicolonKeyword_4()); }
	');'
	{ after(grammarAccess.getMethodAccess().getRightParenthesisSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_0__0__Impl
	rule__Method__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLeftSideAssignment_0_0()); }
	(rule__Method__LeftSideAssignment_0_0)
	{ after(grammarAccess.getMethodAccess().getLeftSideAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getMethodAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParList__Group__0__Impl
	rule__ParList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParListAccess().getParametersAssignment_0()); }
	(rule__ParList__ParametersAssignment_0)
	{ after(grammarAccess.getParListAccess().getParametersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParListAccess().getGroup_1()); }
	(rule__ParList__Group_1__0)*
	{ after(grammarAccess.getParListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParList__Group_1__0__Impl
	rule__ParList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParListAccess().getParametersAssignment_1_1()); }
	(rule__ParList__ParametersAssignment_1_1)
	{ after(grammarAccess.getParListAccess().getParametersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Par__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Par__Group__0__Impl
	rule__Par__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Par__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParAccess().getParAction_0()); }
	()
	{ after(grammarAccess.getParAccess().getParAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Par__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Par__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Par__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParAccess().getAlternatives_1()); }
	(rule__Par__Alternatives_1)
	{ after(grammarAccess.getParAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group__0__Impl
	rule__Aggregate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getAggregateAction_0()); }
	()
	{ after(grammarAccess.getAggregateAccess().getAggregateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getGroup_1()); }
	(rule__Aggregate__Group_1__0)
	{ after(grammarAccess.getAggregateAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group_1__0__Impl
	rule__Aggregate__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getNameAssignment_1_0()); }
	(rule__Aggregate__NameAssignment_1_0)
	{ after(grammarAccess.getAggregateAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group_1__1__Impl
	rule__Aggregate__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getColonEqualsSignKeyword_1_1()); }
	':='
	{ after(grammarAccess.getAggregateAccess().getColonEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group_1__2__Impl
	rule__Aggregate__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getGroup_1_2()); }
	(rule__Aggregate__Group_1_2__0)
	{ after(grammarAccess.getAggregateAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getSemicolonKeyword_1_3()); }
	';'
	{ after(grammarAccess.getAggregateAccess().getSemicolonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group_1_2__0__Impl
	rule__Aggregate__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getLabAssignment_1_2_0()); }
	(rule__Aggregate__LabAssignment_1_2_0)
	{ after(grammarAccess.getAggregateAccess().getLabAssignment_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getGroup_1_2_1()); }
	(rule__Aggregate__Group_1_2_1__0)*
	{ after(grammarAccess.getAggregateAccess().getGroup_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group_1_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group_1_2_1__0__Impl
	rule__Aggregate__Group_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getVerticalLineKeyword_1_2_1_0()); }
	'|'
	{ after(grammarAccess.getAggregateAccess().getVerticalLineKeyword_1_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_1_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getLabAssignment_1_2_1_1()); }
	(rule__Aggregate__LabAssignment_1_2_1_1)
	{ after(grammarAccess.getAggregateAccess().getLabAssignment_1_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Order__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group_0__0__Impl
	rule__Order__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getSimpleOrderParserRuleCall_0_0()); }
	ruleSimpleOrder
	{ after(grammarAccess.getOrderAccess().getSimpleOrderParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getGroup_0_1()); }
	(rule__Order__Group_0_1__0)*
	{ after(grammarAccess.getOrderAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Order__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group_0_1__0__Impl
	rule__Order__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getOrderLeftAction_0_1_0()); }
	()
	{ after(grammarAccess.getOrderAccess().getOrderLeftAction_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group_0_1__1__Impl
	rule__Order__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getOrderopAssignment_0_1_1()); }
	(rule__Order__OrderopAssignment_0_1_1)
	{ after(grammarAccess.getOrderAccess().getOrderopAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getRightAssignment_0_1_2()); }
	(rule__Order__RightAssignment_0_1_2)
	{ after(grammarAccess.getOrderAccess().getRightAssignment_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleOrder__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleOrder__Group__0__Impl
	rule__SimpleOrder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrder__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleOrderAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getSimpleOrderAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrder__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleOrder__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrder__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleOrderAccess().getGroup_1()); }
	(rule__SimpleOrder__Group_1__0)*
	{ after(grammarAccess.getSimpleOrderAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleOrder__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleOrder__Group_1__0__Impl
	rule__SimpleOrder__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrder__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleOrderAccess().getSimpleOrderLeftAction_1_0()); }
	()
	{ after(grammarAccess.getSimpleOrderAccess().getSimpleOrderLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrder__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleOrder__Group_1__1__Impl
	rule__SimpleOrder__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrder__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleOrderAccess().getOrderopAssignment_1_1()); }
	(rule__SimpleOrder__OrderopAssignment_1_1)
	{ after(grammarAccess.getSimpleOrderAccess().getOrderopAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrder__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleOrder__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrder__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleOrderAccess().getRightAssignment_1_2()); }
	(rule__SimpleOrder__RightAssignment_1_2)
	{ after(grammarAccess.getSimpleOrderAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getOrderEvAssignment_0_0()); }
	(rule__Primary__OrderEvAssignment_0_0)
	{ after(grammarAccess.getPrimaryAccess().getOrderEvAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getElementopAssignment_0_1()); }
	(rule__Primary__ElementopAssignment_0_1)?
	{ after(grammarAccess.getPrimaryAccess().getElementopAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getOrderParserRuleCall_1_1()); }
	ruleOrder
	{ after(grammarAccess.getPrimaryAccess().getOrderParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
	rule__Primary__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getElementopAssignment_1_3()); }
	(rule__Primary__ElementopAssignment_1_3)?
	{ after(grammarAccess.getPrimaryAccess().getElementopAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalImplyExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalImplyExpression__Group__0__Impl
	rule__LogicalImplyExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalImplyExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalImplyExpressionAccess().getLogicalOrExpressionParserRuleCall_0()); }
	ruleLogicalOrExpression
	{ after(grammarAccess.getLogicalImplyExpressionAccess().getLogicalOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalImplyExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalImplyExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalImplyExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalImplyExpressionAccess().getGroup_1()); }
	(rule__LogicalImplyExpression__Group_1__0)*
	{ after(grammarAccess.getLogicalImplyExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalImplyExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalImplyExpression__Group_1__0__Impl
	rule__LogicalImplyExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalImplyExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalImplyExpressionAccess().getConstraintLeftExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalImplyExpressionAccess().getConstraintLeftExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalImplyExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalImplyExpression__Group_1__1__Impl
	rule__LogicalImplyExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalImplyExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalImplyExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__LogicalImplyExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getLogicalImplyExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalImplyExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalImplyExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalImplyExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalImplyExpressionAccess().getRightExpressionAssignment_1_2()); }
	(rule__LogicalImplyExpression__RightExpressionAssignment_1_2)
	{ after(grammarAccess.getLogicalImplyExpressionAccess().getRightExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group__0__Impl
	rule__LogicalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
	ruleLogicalAndExpression
	{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
	(rule__LogicalOrExpression__Group_1__0)*
	{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group_1__0__Impl
	rule__LogicalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getConstraintLeftExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalOrExpressionAccess().getConstraintLeftExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group_1__1__Impl
	rule__LogicalOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__LogicalOrExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getLogicalOrExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getRightExpressionAssignment_1_2()); }
	(rule__LogicalOrExpression__RightExpressionAssignment_1_2)
	{ after(grammarAccess.getLogicalOrExpressionAccess().getRightExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group__0__Impl
	rule__LogicalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getComparisonExpressionParserRuleCall_0()); }
	ruleComparisonExpression
	{ after(grammarAccess.getLogicalAndExpressionAccess().getComparisonExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
	(rule__LogicalAndExpression__Group_1__0)*
	{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group_1__0__Impl
	rule__LogicalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getConstraintLeftExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalAndExpressionAccess().getConstraintLeftExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group_1__1__Impl
	rule__LogicalAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__LogicalAndExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getLogicalAndExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getRightExpressionAssignment_1_2()); }
	(rule__LogicalAndExpression__RightExpressionAssignment_1_2)
	{ after(grammarAccess.getLogicalAndExpressionAccess().getRightExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__0__Impl
	rule__ComparisonExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getComparisonHigherOpExpressionParserRuleCall_0()); }
	ruleComparisonHigherOpExpression
	{ after(grammarAccess.getComparisonExpressionAccess().getComparisonHigherOpExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1()); }
	(rule__ComparisonExpression__Group_1__0)?
	{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1__0__Impl
	rule__ComparisonExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getComparisonExpressionLeftExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonExpressionAccess().getComparisonExpressionLeftExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1__1__Impl
	rule__ComparisonExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ComparisonExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getComparisonExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRightExpressionAssignment_1_2()); }
	(rule__ComparisonExpression__RightExpressionAssignment_1_2)
	{ after(grammarAccess.getComparisonExpressionAccess().getRightExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonHigherOpExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonHigherOpExpression__Group__0__Impl
	rule__ComparisonHigherOpExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonHigherOpExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonHigherOpExpressionAccess().getArithmeticExpressionParserRuleCall_0()); }
	ruleArithmeticExpression
	{ after(grammarAccess.getComparisonHigherOpExpressionAccess().getArithmeticExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonHigherOpExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonHigherOpExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonHigherOpExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonHigherOpExpressionAccess().getGroup_1()); }
	(rule__ComparisonHigherOpExpression__Group_1__0)?
	{ after(grammarAccess.getComparisonHigherOpExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonHigherOpExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonHigherOpExpression__Group_1__0__Impl
	rule__ComparisonHigherOpExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonHigherOpExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonHigherOpExpressionAccess().getComparisonExpressionLeftExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonHigherOpExpressionAccess().getComparisonExpressionLeftExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonHigherOpExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonHigherOpExpression__Group_1__1__Impl
	rule__ComparisonHigherOpExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonHigherOpExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonHigherOpExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ComparisonHigherOpExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getComparisonHigherOpExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonHigherOpExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonHigherOpExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonHigherOpExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonHigherOpExpressionAccess().getRightExpressionAssignment_1_2()); }
	(rule__ComparisonHigherOpExpression__RightExpressionAssignment_1_2)
	{ after(grammarAccess.getComparisonHigherOpExpressionAccess().getRightExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group__0__Impl
	rule__AdditionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getModularExpressionParserRuleCall_0()); }
	ruleModularExpression
	{ after(grammarAccess.getAdditionExpressionAccess().getModularExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getGroup_1()); }
	(rule__AdditionExpression__Group_1__0)*
	{ after(grammarAccess.getAdditionExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group_1__0__Impl
	rule__AdditionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getArithmeticExpressionLeftExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getAdditionExpressionAccess().getArithmeticExpressionLeftExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group_1__1__Impl
	rule__AdditionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__AdditionExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getAdditionExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getRightExpressionAssignment_1_2()); }
	(rule__AdditionExpression__RightExpressionAssignment_1_2)
	{ after(grammarAccess.getAdditionExpressionAccess().getRightExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModularExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModularExpression__Group__0__Impl
	rule__ModularExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModularExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModularExpressionAccess().getMultiplicationExpressionParserRuleCall_0()); }
	ruleMultiplicationExpression
	{ after(grammarAccess.getModularExpressionAccess().getMultiplicationExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModularExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModularExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModularExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModularExpressionAccess().getGroup_1()); }
	(rule__ModularExpression__Group_1__0)*
	{ after(grammarAccess.getModularExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModularExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModularExpression__Group_1__0__Impl
	rule__ModularExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModularExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModularExpressionAccess().getArithmeticExpressionLeftExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getModularExpressionAccess().getArithmeticExpressionLeftExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModularExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModularExpression__Group_1__1__Impl
	rule__ModularExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModularExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModularExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ModularExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getModularExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModularExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModularExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModularExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModularExpressionAccess().getRightExpressionAssignment_1_2()); }
	(rule__ModularExpression__RightExpressionAssignment_1_2)
	{ after(grammarAccess.getModularExpressionAccess().getRightExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group_1__0__Impl
	rule__MultiplicationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getOperandParserRuleCall_1_0()); }
	ruleOperand
	{ after(grammarAccess.getMultiplicationExpressionAccess().getOperandParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getGroup_1_1()); }
	(rule__MultiplicationExpression__Group_1_1__0)*
	{ after(grammarAccess.getMultiplicationExpressionAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group_1_1__0__Impl
	rule__MultiplicationExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getArithmeticExpressionLeftExpressionAction_1_1_0()); }
	()
	{ after(grammarAccess.getMultiplicationExpressionAccess().getArithmeticExpressionLeftExpressionAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group_1_1__1__Impl
	rule__MultiplicationExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getOperatorAssignment_1_1_1()); }
	(rule__MultiplicationExpression__OperatorAssignment_1_1_1)
	{ after(grammarAccess.getMultiplicationExpressionAccess().getOperatorAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getRightExpressionAssignment_1_1_2()); }
	(rule__MultiplicationExpression__RightExpressionAssignment_1_1_2)
	{ after(grammarAccess.getMultiplicationExpressionAccess().getRightExpressionAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryPreExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryPreExpression__Group__0__Impl
	rule__UnaryPreExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryPreExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryPreExpressionAccess().getUnaryPreExpressionAction_0()); }
	()
	{ after(grammarAccess.getUnaryPreExpressionAccess().getUnaryPreExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryPreExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryPreExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryPreExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryPreExpressionAccess().getGroup_1()); }
	(rule__UnaryPreExpression__Group_1__0)
	{ after(grammarAccess.getUnaryPreExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryPreExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryPreExpression__Group_1__0__Impl
	rule__UnaryPreExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryPreExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryPreExpressionAccess().getOperatorAssignment_1_0()); }
	(rule__UnaryPreExpression__OperatorAssignment_1_0)
	{ after(grammarAccess.getUnaryPreExpressionAccess().getOperatorAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryPreExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryPreExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryPreExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryPreExpressionAccess().getEnclosedExpressionAssignment_1_1()); }
	(rule__UnaryPreExpression__EnclosedExpressionAssignment_1_1)
	{ after(grammarAccess.getUnaryPreExpressionAccess().getEnclosedExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operand__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_0__0__Impl
	rule__Operand__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_0__1__Impl
	rule__Operand__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getConstraintParserRuleCall_0_1()); }
	ruleConstraint
	{ after(grammarAccess.getOperandAccess().getConstraintParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getOperandAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PreDefinedPredicates__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_0__0__Impl
	rule__PreDefinedPredicates__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_0_0()); }
		(rule__PreDefinedPredicates__PredNameAssignment_0_0)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_0_0()); }
	)
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_0_0()); }
		(rule__PreDefinedPredicates__PredNameAssignment_0_0)*
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_0_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_0__1__Impl
	rule__PreDefinedPredicates__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getLeftSquareBracketKeyword_0_1()); }
	'['
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getLeftSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_0__2__Impl
	rule__PreDefinedPredicates__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjAssignment_0_2()); }
	(rule__PreDefinedPredicates__ObjAssignment_0_2)
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_0__3__Impl
	rule__PreDefinedPredicates__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getCommaKeyword_0_3()); }
	','
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getCommaKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_0__4__Impl
	rule__PreDefinedPredicates__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getTypeAssignment_0_4()); }
	(rule__PreDefinedPredicates__TypeAssignment_0_4)
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getTypeAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getRightSquareBracketKeyword_0_5()); }
	']'
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getRightSquareBracketKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PreDefinedPredicates__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_1__0__Impl
	rule__PreDefinedPredicates__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_1_0()); }
		(rule__PreDefinedPredicates__PredNameAssignment_1_0)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_1_0()); }
	)
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_1_0()); }
		(rule__PreDefinedPredicates__PredNameAssignment_1_0)*
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_1_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_1__1__Impl
	rule__PreDefinedPredicates__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getLeftSquareBracketKeyword_1_1()); }
	'['
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getLeftSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_1__2__Impl
	rule__PreDefinedPredicates__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjAssignment_1_2()); }
	(rule__PreDefinedPredicates__ObjAssignment_1_2)
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PreDefinedPredicates__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_2__0__Impl
	rule__PreDefinedPredicates__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_2_0()); }
		(rule__PreDefinedPredicates__PredNameAssignment_2_0)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_2_0()); }
	)
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_2_0()); }
		(rule__PreDefinedPredicates__PredNameAssignment_2_0)*
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_2_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_2__1__Impl
	rule__PreDefinedPredicates__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getLeftSquareBracketKeyword_2_1()); }
	'['
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getLeftSquareBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_2__2__Impl
	rule__PreDefinedPredicates__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjAssignment_2_2()); }
	(rule__PreDefinedPredicates__ObjAssignment_2_2)
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getRightSquareBracketKeyword_2_3()); }
	']'
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getRightSquareBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PreDefinedPredicates__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_3__0__Impl
	rule__PreDefinedPredicates__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_3_0()); }
		(rule__PreDefinedPredicates__PredNameAssignment_3_0)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_3_0()); }
	)
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_3_0()); }
		(rule__PreDefinedPredicates__PredNameAssignment_3_0)*
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_3_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_3__1__Impl
	rule__PreDefinedPredicates__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getLeftSquareBracketKeyword_3_1()); }
	'['
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getLeftSquareBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_3__2__Impl
	rule__PreDefinedPredicates__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjAssignment_3_2()); }
	(rule__PreDefinedPredicates__ObjAssignment_3_2)
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getRightSquareBracketKeyword_3_3()); }
	']'
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getRightSquareBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PreDefinedPredicates__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_4__0__Impl
	rule__PreDefinedPredicates__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_4_0()); }
		(rule__PreDefinedPredicates__PredNameAssignment_4_0)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_4_0()); }
	)
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_4_0()); }
		(rule__PreDefinedPredicates__PredNameAssignment_4_0)*
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_4_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_4__1__Impl
	rule__PreDefinedPredicates__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getLeftSquareBracketKeyword_4_1()); }
	'['
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getLeftSquareBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_4__2__Impl
	rule__PreDefinedPredicates__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjAssignment_4_2()); }
	(rule__PreDefinedPredicates__ObjAssignment_4_2)
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getRightSquareBracketKeyword_4_3()); }
	']'
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getRightSquareBracketKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PreDefinedPredicates__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_5__0__Impl
	rule__PreDefinedPredicates__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_5_0()); }
		(rule__PreDefinedPredicates__PredNameAssignment_5_0)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_5_0()); }
	)
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_5_0()); }
		(rule__PreDefinedPredicates__PredNameAssignment_5_0)*
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameAssignment_5_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_5__1__Impl
	rule__PreDefinedPredicates__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getLeftSquareBracketKeyword_5_1()); }
	'['
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getLeftSquareBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_5__2__Impl
	rule__PreDefinedPredicates__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjAssignment_5_2()); }
	(rule__PreDefinedPredicates__ObjAssignment_5_2)
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_5__3__Impl
	rule__PreDefinedPredicates__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getCommaKeyword_5_3()); }
	','
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getCommaKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_5__4__Impl
	rule__PreDefinedPredicates__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getTypeAssignment_5_4()); }
	(rule__PreDefinedPredicates__TypeAssignment_5_4)
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getTypeAssignment_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_5__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDefinedPredicates__Group_5__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__Group_5__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDefinedPredicatesAccess().getRightSquareBracketKeyword_5_5()); }
	']'
	{ after(grammarAccess.getPreDefinedPredicatesAccess().getRightSquareBracketKeyword_5_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AggregateExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregateExpression__Group__0__Impl
	rule__AggregateExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateExpressionAccess().getValueAssignment_0()); }
	(rule__AggregateExpression__ValueAssignment_0)
	{ after(grammarAccess.getAggregateExpressionAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregateExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateExpressionAccess().getGroup_1()); }
	(rule__AggregateExpression__Group_1__0)?
	{ after(grammarAccess.getAggregateExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AggregateExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregateExpression__Group_1__0__Impl
	rule__AggregateExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateExpressionAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getAggregateExpressionAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregateExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateExpressionAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getAggregateExpressionAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group__0__Impl
	rule__Literal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getLiteralAction_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getValAssignment_1()); }
	(rule__Literal__ValAssignment_1)
	{ after(grammarAccess.getLiteralAccess().getValAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerLiteral__Group_1__0__Impl
	rule__IntegerLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
	{ after(grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerLiteral__Group_1__1__Impl
	rule__IntegerLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerLiteralAccess().getCircumflexAccentKeyword_1_1()); }
	'^'
	{ after(grammarAccess.getIntegerLiteralAccess().getCircumflexAccentKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerLiteral__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall_1_2()); }
	RULE_INT
	{ after(grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cons__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cons__Group_0__0__Impl
	rule__Cons__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cons__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsAccess().getConsAssignment_0_0()); }
	(rule__Cons__ConsAssignment_0_0)
	{ after(grammarAccess.getConsAccess().getConsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cons__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cons__Group_0__1__Impl
	rule__Cons__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cons__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsAccess().getInKeyword_0_1()); }
	'in'
	{ after(grammarAccess.getConsAccess().getInKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cons__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cons__Group_0__2__Impl
	rule__Cons__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cons__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsAccess().getLeftCurlyBracketKeyword_0_2()); }
	'{'
	{ after(grammarAccess.getConsAccess().getLeftCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cons__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cons__Group_0__3__Impl
	rule__Cons__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cons__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsAccess().getLitsleftAssignment_0_3()); }
	(rule__Cons__LitsleftAssignment_0_3)
	{ after(grammarAccess.getConsAccess().getLitsleftAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cons__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cons__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cons__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsAccess().getRightCurlyBracketKeyword_0_4()); }
	'}'
	{ after(grammarAccess.getConsAccess().getRightCurlyBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayElements__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayElements__Group_0__0__Impl
	rule__ArrayElements__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElements__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayElementsAccess().getElAssignment_0_0()); }
	(rule__ArrayElements__ElAssignment_0_0)
	{ after(grammarAccess.getArrayElementsAccess().getElAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElements__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayElements__Group_0__1__Impl
	rule__ArrayElements__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElements__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayElementsAccess().getConsAssignment_0_1()); }
	(rule__ArrayElements__ConsAssignment_0_1)
	{ after(grammarAccess.getArrayElementsAccess().getConsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElements__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayElements__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElements__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayElementsAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getArrayElementsAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConsPred__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_0_0__0__Impl
	rule__ConsPred__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getConsPredAssignment_0_0_0()); }
	(rule__ConsPred__ConsPredAssignment_0_0_0)
	{ after(grammarAccess.getConsPredAccess().getConsPredAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_0_0__1__Impl
	rule__ConsPred__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getLitAssignment_0_0_1()); }
	(rule__ConsPred__LitAssignment_0_0_1)
	{ after(grammarAccess.getConsPredAccess().getLitAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getRightParenthesisKeyword_0_0_2()); }
	')'
	{ after(grammarAccess.getConsPredAccess().getRightParenthesisKeyword_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConsPred__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_0_1__0__Impl
	rule__ConsPred__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getConsPredAssignment_0_1_0()); }
	(rule__ConsPred__ConsPredAssignment_0_1_0)
	{ after(grammarAccess.getConsPredAccess().getConsPredAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_0_1__1__Impl
	rule__ConsPred__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getLitAssignment_0_1_1()); }
	(rule__ConsPred__LitAssignment_0_1_1)
	{ after(grammarAccess.getConsPredAccess().getLitAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getRightParenthesisKeyword_0_1_2()); }
	')'
	{ after(grammarAccess.getConsPredAccess().getRightParenthesisKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConsPred__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_0_2__0__Impl
	rule__ConsPred__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getConsPredAssignment_0_2_0()); }
	(rule__ConsPred__ConsPredAssignment_0_2_0)
	{ after(grammarAccess.getConsPredAccess().getConsPredAssignment_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_0_2__1__Impl
	rule__ConsPred__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getLitAssignment_0_2_1()); }
	(rule__ConsPred__LitAssignment_0_2_1)
	{ after(grammarAccess.getConsPredAccess().getLitAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getRightParenthesisKeyword_0_2_2()); }
	')'
	{ after(grammarAccess.getConsPredAccess().getRightParenthesisKeyword_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConsPred__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_1__0__Impl
	rule__ConsPred__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getPartAssignment_1_0()); }
	(rule__ConsPred__PartAssignment_1_0)
	{ after(grammarAccess.getConsPredAccess().getPartAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_1__1__Impl
	rule__ConsPred__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getIndAssignment_1_1()); }
	(rule__ConsPred__IndAssignment_1_1)
	{ after(grammarAccess.getConsPredAccess().getIndAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_1__2__Impl
	rule__ConsPred__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getCommaKeyword_1_2()); }
	','
	{ after(grammarAccess.getConsPredAccess().getCommaKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_1__3__Impl
	rule__ConsPred__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getSplitAssignment_1_3()); }
	(rule__ConsPred__SplitAssignment_1_3)
	{ after(grammarAccess.getConsPredAccess().getSplitAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_1__4__Impl
	rule__ConsPred__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getCommaKeyword_1_4()); }
	','
	{ after(grammarAccess.getConsPredAccess().getCommaKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_1__5__Impl
	rule__ConsPred__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getLitAssignment_1_5()); }
	(rule__ConsPred__LitAssignment_1_5)
	{ after(grammarAccess.getConsPredAccess().getLitAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsPred__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsPredAccess().getRightParenthesisKeyword_1_6()); }
	')'
	{ after(grammarAccess.getConsPredAccess().getRightParenthesisKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LitList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LitList__Group__0__Impl
	rule__LitList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LitList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLitListAccess().getParametersAssignment_0()); }
	(rule__LitList__ParametersAssignment_0)
	{ after(grammarAccess.getLitListAccess().getParametersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LitList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LitList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LitList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLitListAccess().getGroup_1()); }
	(rule__LitList__Group_1__0)*
	{ after(grammarAccess.getLitListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LitList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LitList__Group_1__0__Impl
	rule__LitList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LitList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLitListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getLitListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LitList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LitList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LitList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLitListAccess().getAlternatives_1_1()); }
	(rule__LitList__Alternatives_1_1)
	{ after(grammarAccess.getLitListAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pred__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pred__Group__0__Impl
	rule__Pred__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredAccess().getPredNameAssignment_0()); }
	(rule__Pred__PredNameAssignment_0)
	{ after(grammarAccess.getPredAccess().getPredNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pred__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredAccess().getAlternatives_1()); }
	(rule__Pred__Alternatives_1)
	{ after(grammarAccess.getPredAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pred__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pred__Group_1_0__0__Impl
	rule__Pred__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredAccess().getLeftSquareBracketKeyword_1_0_0()); }
	'['
	{ after(grammarAccess.getPredAccess().getLeftSquareBracketKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pred__Group_1_0__1__Impl
	rule__Pred__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredAccess().getParListAssignment_1_0_1()); }
	(rule__Pred__ParListAssignment_1_0_1)
	{ after(grammarAccess.getPredAccess().getParListAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pred__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredAccess().getRightSquareBracketKeyword_1_0_2()); }
	']'
	{ after(grammarAccess.getPredAccess().getRightSquareBracketKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReqPred__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqPred__Group__0__Impl
	rule__ReqPred__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPred__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqPredAccess().getPredLitParserRuleCall_0()); }
	rulePredLit
	{ after(grammarAccess.getReqPredAccess().getPredLitParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPred__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqPred__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPred__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqPredAccess().getGroup_1()); }
	(rule__ReqPred__Group_1__0)*
	{ after(grammarAccess.getReqPredAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReqPred__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqPred__Group_1__0__Impl
	rule__ReqPred__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPred__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqPredAccess().getReqPredLeftExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getReqPredAccess().getReqPredLeftExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPred__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqPred__Group_1__1__Impl
	rule__ReqPred__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPred__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqPredAccess().getOperatorAssignment_1_1()); }
	(rule__ReqPred__OperatorAssignment_1_1)
	{ after(grammarAccess.getReqPredAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPred__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqPred__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPred__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqPredAccess().getRightExpressionAssignment_1_2()); }
	(rule__ReqPred__RightExpressionAssignment_1_2)
	{ after(grammarAccess.getReqPredAccess().getRightExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredLit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredLit__Group__0__Impl
	rule__PredLit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredLit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredLitAccess().getGroup_0()); }
	(rule__PredLit__Group_0__0)?
	{ after(grammarAccess.getPredLitAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredLit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredLit__Group__1__Impl
	rule__PredLit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PredLit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredLitAccess().getNotAssignment_1()); }
	(rule__PredLit__NotAssignment_1)?
	{ after(grammarAccess.getPredLitAccess().getNotAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredLit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredLit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredLit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredLitAccess().getPredAssignment_2()); }
	(rule__PredLit__PredAssignment_2)
	{ after(grammarAccess.getPredLitAccess().getPredAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredLit__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredLit__Group_0__0__Impl
	rule__PredLit__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredLit__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredLitAccess().getConsAssignment_0_0()); }
	(rule__PredLit__ConsAssignment_0_0)
	{ after(grammarAccess.getPredLitAccess().getConsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredLit__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredLit__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredLit__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredLitAccess().getEqualsSignGreaterThanSignKeyword_0_1()); }
	'=>'
	{ after(grammarAccess.getPredLitAccess().getEqualsSignGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnsPred__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnsPred__Group__0__Impl
	rule__EnsPred__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnsPred__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnsPredAccess().getPredLitAssignment_0()); }
	(rule__EnsPred__PredLitAssignment_0)
	{ after(grammarAccess.getEnsPredAccess().getPredLitAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnsPred__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnsPred__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnsPred__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnsPredAccess().getGroup_1()); }
	(rule__EnsPred__Group_1__0)?
	{ after(grammarAccess.getEnsPredAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnsPred__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnsPred__Group_1__0__Impl
	rule__EnsPred__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnsPred__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnsPredAccess().getAfterKeyword_1_0()); }
	'after'
	{ after(grammarAccess.getEnsPredAccess().getAfterKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnsPred__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnsPred__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnsPred__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnsPredAccess().getLabelCondAssignment_1_1()); }
	(rule__EnsPred__LabelCondAssignment_1_1)
	{ after(grammarAccess.getEnsPredAccess().getLabelCondAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuParList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuParList__Group__0__Impl
	rule__SuParList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuParList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuParListAccess().getParametersAssignment_0()); }
	(rule__SuParList__ParametersAssignment_0)
	{ after(grammarAccess.getSuParListAccess().getParametersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuParList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuParList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuParList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuParListAccess().getGroup_1()); }
	(rule__SuParList__Group_1__0)*
	{ after(grammarAccess.getSuParListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuParList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuParList__Group_1__0__Impl
	rule__SuParList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuParList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuParListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getSuParListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuParList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuParList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuParList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuParListAccess().getParametersAssignment_1_1()); }
	(rule__SuParList__ParametersAssignment_1_1)
	{ after(grammarAccess.getSuParListAccess().getParametersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuPar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuPar__Group__0__Impl
	rule__SuPar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuPar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuParAccess().getSuParAction_0()); }
	()
	{ after(grammarAccess.getSuParAccess().getSuParAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuPar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuPar__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuPar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuParAccess().getAlternatives_1()); }
	(rule__SuPar__Alternatives_1)
	{ after(grammarAccess.getSuParAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__0__Impl
	rule__Object__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getObjectAction_0()); }
	()
	{ after(grammarAccess.getObjectAccess().getObjectAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getNameAssignment_1()); }
	(rule__Object__NameAssignment_1)
	{ after(grammarAccess.getObjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmTypeReference__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmTypeReference__Group_0__0__Impl
	rule__JvmTypeReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); }
	ruleJvmParameterizedTypeReference
	{ after(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmTypeReference__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1()); }
	(rule__JvmTypeReference__Group_0_1__0)*
	{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmTypeReference__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmTypeReference__Group_0_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1_0()); }
	(rule__JvmTypeReference__Group_0_1_0__0)
	{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmTypeReference__Group_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmTypeReference__Group_0_1_0__0__Impl
	rule__JvmTypeReference__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0()); }
	()
	{ after(grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmTypeReference__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); }
	ruleArrayBrackets
	{ after(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayBrackets__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayBrackets__Group__0__Impl
	rule__ArrayBrackets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBrackets__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBrackets__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayBrackets__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBrackets__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); }
	']'
	{ after(grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XFunctionTypeRef__Group__0__Impl
	rule__XFunctionTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0()); }
	(rule__XFunctionTypeRef__Group_0__0)?
	{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XFunctionTypeRef__Group__1__Impl
	rule__XFunctionTypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XFunctionTypeRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2()); }
	(rule__XFunctionTypeRef__ReturnTypeAssignment_2)
	{ after(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XFunctionTypeRef__Group_0__0__Impl
	rule__XFunctionTypeRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XFunctionTypeRef__Group_0__1__Impl
	rule__XFunctionTypeRef__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1()); }
	(rule__XFunctionTypeRef__Group_0_1__0)?
	{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XFunctionTypeRef__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XFunctionTypeRef__Group_0_1__0__Impl
	rule__XFunctionTypeRef__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_0()); }
	(rule__XFunctionTypeRef__ParamTypesAssignment_0_1_0)
	{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XFunctionTypeRef__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1_1()); }
	(rule__XFunctionTypeRef__Group_0_1_1__0)*
	{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XFunctionTypeRef__Group_0_1_1__0__Impl
	rule__XFunctionTypeRef__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0()); }
	','
	{ after(grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XFunctionTypeRef__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_1_1()); }
	(rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1)
	{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group__0__Impl
	rule__JvmParameterizedTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0()); }
	(rule__JvmParameterizedTypeReference__TypeAssignment_0)
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1()); }
	(rule__JvmParameterizedTypeReference__Group_1__0)?
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1__0__Impl
	rule__JvmParameterizedTypeReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0()); }
	('<')
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1__1__Impl
	rule__JvmParameterizedTypeReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1()); }
	(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1)
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1__2__Impl
	rule__JvmParameterizedTypeReference__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2()); }
	(rule__JvmParameterizedTypeReference__Group_1_2__0)*
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1__3__Impl
	rule__JvmParameterizedTypeReference__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3()); }
	'>'
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4()); }
	(rule__JvmParameterizedTypeReference__Group_1_4__0)*
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_2__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1()); }
	(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1)
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_4__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0()); }
	(rule__JvmParameterizedTypeReference__Group_1_4_0__0)
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_4__1__Impl
	rule__JvmParameterizedTypeReference__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_1_4_1()); }
	(rule__JvmParameterizedTypeReference__TypeAssignment_1_4_1)
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2()); }
	(rule__JvmParameterizedTypeReference__Group_1_4_2__0)?
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_4_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0_0()); }
	(rule__JvmParameterizedTypeReference__Group_1_4_0_0__0)
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_4_0_0__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0()); }
	()
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_4_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1()); }
	'.'
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_4_2__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0()); }
	('<')
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_4_2__1__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_1()); }
	(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_1)
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_4_2__2__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2_2()); }
	(rule__JvmParameterizedTypeReference__Group_1_4_2_2__0)*
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_4_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3()); }
	'>'
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_4_2_2__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0()); }
	','
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmParameterizedTypeReference__Group_1_4_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_2_1()); }
	(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_2_1)
	{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmWildcardTypeReference__Group__0__Impl
	rule__JvmWildcardTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0()); }
	()
	{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmWildcardTypeReference__Group__1__Impl
	rule__JvmWildcardTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1()); }
	'?'
	{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmWildcardTypeReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getAlternatives_2()); }
	(rule__JvmWildcardTypeReference__Alternatives_2)?
	{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmWildcardTypeReference__Group_2_0__0__Impl
	rule__JvmWildcardTypeReference__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_0()); }
	(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_0)
	{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmWildcardTypeReference__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_1()); }
	(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_1)*
	{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmWildcardTypeReference__Group_2_1__0__Impl
	rule__JvmWildcardTypeReference__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_0()); }
	(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_0)
	{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmWildcardTypeReference__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_1()); }
	(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_1)*
	{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmUpperBound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmUpperBound__Group__0__Impl
	rule__JvmUpperBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0()); }
	'extends'
	{ after(grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmUpperBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1()); }
	(rule__JvmUpperBound__TypeReferenceAssignment_1)
	{ after(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmUpperBoundAnded__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmUpperBoundAnded__Group__0__Impl
	rule__JvmUpperBoundAnded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0()); }
	'&'
	{ after(grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmUpperBoundAnded__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1()); }
	(rule__JvmUpperBoundAnded__TypeReferenceAssignment_1)
	{ after(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmLowerBound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmLowerBound__Group__0__Impl
	rule__JvmLowerBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0()); }
	'super'
	{ after(grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmLowerBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1()); }
	(rule__JvmLowerBound__TypeReferenceAssignment_1)
	{ after(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JvmLowerBoundAnded__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmLowerBoundAnded__Group__0__Impl
	rule__JvmLowerBoundAnded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBoundAnded__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0()); }
	'&'
	{ after(grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBoundAnded__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JvmLowerBoundAnded__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBoundAnded__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceAssignment_1()); }
	(rule__JvmLowerBoundAnded__TypeReferenceAssignment_1)
	{ after(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
	{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
	ruleValidID
	{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
	rule__QualifiedNameWithWildcard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); }
	'*'
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XImportDeclaration__Group__0__Impl
	rule__XImportDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXImportDeclarationAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getXImportDeclarationAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XImportDeclaration__Group__1__Impl
	rule__XImportDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXImportDeclarationAccess().getAlternatives_1()); }
	(rule__XImportDeclaration__Alternatives_1)
	{ after(grammarAccess.getXImportDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XImportDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2()); }
	(';')?
	{ after(grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XImportDeclaration__Group_1_0__0__Impl
	rule__XImportDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXImportDeclarationAccess().getStaticAssignment_1_0_0()); }
	(rule__XImportDeclaration__StaticAssignment_1_0_0)
	{ after(grammarAccess.getXImportDeclarationAccess().getStaticAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XImportDeclaration__Group_1_0__1__Impl
	rule__XImportDeclaration__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXImportDeclarationAccess().getExtensionAssignment_1_0_1()); }
	(rule__XImportDeclaration__ExtensionAssignment_1_0_1)?
	{ after(grammarAccess.getXImportDeclarationAccess().getExtensionAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XImportDeclaration__Group_1_0__2__Impl
	rule__XImportDeclaration__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_0_2()); }
	(rule__XImportDeclaration__ImportedTypeAssignment_1_0_2)
	{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XImportDeclaration__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXImportDeclarationAccess().getAlternatives_1_0_3()); }
	(rule__XImportDeclaration__Alternatives_1_0_3)
	{ after(grammarAccess.getXImportDeclarationAccess().getAlternatives_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameInStaticImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameInStaticImport__Group__0__Impl
	rule__QualifiedNameInStaticImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameInStaticImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
	{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameInStaticImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameInStaticImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameInStaticImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__JavaTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getJavaTypeJvmTypeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDomainmodelAccess().getJavaTypeJvmTypeQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getDomainmodelAccess().getJavaTypeJvmTypeQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDomainmodelAccess().getJavaTypeJvmTypeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__ArrayAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getDomainmodelAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_2_0_0()); }
			'[]'
			{ after(grammarAccess.getDomainmodelAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getDomainmodelAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__CollectionAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getCollectionJvmGenericTypeCrossReference_2_1_1_0()); }
		(
			{ before(grammarAccess.getDomainmodelAccess().getCollectionJvmGenericTypeQualifiedNameParserRuleCall_2_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getDomainmodelAccess().getCollectionJvmGenericTypeQualifiedNameParserRuleCall_2_1_1_0_1()); }
		)
		{ after(grammarAccess.getDomainmodelAccess().getCollectionJvmGenericTypeCrossReference_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__UsageAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getUsageUseBlockParserRuleCall_4_0()); }
		ruleUseBlock
		{ after(grammarAccess.getDomainmodelAccess().getUsageUseBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__ForbEventAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getForbEventForbiddenBlockParserRuleCall_5_1_0()); }
		ruleForbiddenBlock
		{ after(grammarAccess.getDomainmodelAccess().getForbEventForbiddenBlockParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Req_eventsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getReq_eventsRequiredBlockParserRuleCall_7_0()); }
		ruleRequiredBlock
		{ after(grammarAccess.getDomainmodelAccess().getReq_eventsRequiredBlockParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__OrderAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getOrderOrderParserRuleCall_9_0()); }
		ruleOrder
		{ after(grammarAccess.getDomainmodelAccess().getOrderOrderParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__ReqConstraintsAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getReqConstraintsEnforceConsBlockParserRuleCall_10_1_0()); }
		ruleEnforceConsBlock
		{ after(grammarAccess.getDomainmodelAccess().getReqConstraintsEnforceConsBlockParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__RequireAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getRequireRequiresBlockParserRuleCall_11_1_0()); }
		ruleRequiresBlock
		{ after(grammarAccess.getDomainmodelAccess().getRequireRequiresBlockParserRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__EnsureAssignment_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getEnsureEnsuresBlockParserRuleCall_12_1_0()); }
		ruleEnsuresBlock
		{ after(grammarAccess.getDomainmodelAccess().getEnsureEnsuresBlockParserRuleCall_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__DestroyAssignment_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getDestroyDestroysBlockParserRuleCall_13_1_0()); }
		ruleDestroysBlock
		{ after(grammarAccess.getDomainmodelAccess().getDestroyDestroysBlockParserRuleCall_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseBlock__ObjectsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseBlockAccess().getObjectsObjectDeclParserRuleCall_0()); }
		ruleObjectDecl
		{ after(grammarAccess.getUseBlockAccess().getObjectsObjectDeclParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForbiddenBlock__Forb_methodsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForbiddenBlockAccess().getForb_methodsForbMethodParserRuleCall_0()); }
		ruleForbMethod
		{ after(grammarAccess.getForbiddenBlockAccess().getForb_methodsForbMethodParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredBlock__Req_eventAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequiredBlockAccess().getReq_eventEventParserRuleCall_0()); }
		ruleEvent
		{ after(grammarAccess.getRequiredBlockAccess().getReq_eventEventParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnforceConsBlock__ReqAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnforceConsBlockAccess().getReqConstraintParserRuleCall_0_0()); }
		ruleConstraint
		{ after(grammarAccess.getEnforceConsBlockAccess().getReqConstraintParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiresBlock__PredAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequiresBlockAccess().getPredReqPredParserRuleCall_0_0()); }
		ruleReqPred
		{ after(grammarAccess.getRequiresBlockAccess().getPredReqPredParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnsuresBlock__PredAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnsuresBlockAccess().getPredEnsPredParserRuleCall_0_0()); }
		ruleEnsPred
		{ after(grammarAccess.getEnsuresBlockAccess().getPredEnsPredParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestroysBlock__PredAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestroysBlockAccess().getPredEnsPredParserRuleCall_0_0()); }
		ruleEnsPred
		{ after(grammarAccess.getDestroysBlockAccess().getPredEnsPredParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__ObjectTypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclAccess().getObjectTypeJvmTypeCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getObjectDeclAccess().getObjectTypeJvmTypeQualifiedNameParserRuleCall_0_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getObjectDeclAccess().getObjectTypeJvmTypeQualifiedNameParserRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getObjectDeclAccess().getObjectTypeJvmTypeCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__ArrayAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_0_1_0_0()); }
		(
			{ before(grammarAccess.getObjectDeclAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_0_1_0_0()); }
			'[]'
			{ after(grammarAccess.getObjectDeclAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_0_1_0_0()); }
		)
		{ after(grammarAccess.getObjectDeclAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__CollectionAssignment_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclAccess().getCollectionJvmParameterizedTypeRefParserRuleCall_0_1_1_1_0()); }
		ruleJvmParameterizedTypeRef
		{ after(grammarAccess.getObjectDeclAccess().getCollectionJvmParameterizedTypeRefParserRuleCall_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDecl__ObjectNameAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectDeclAccess().getObjectNameObjectParserRuleCall_0_2_0()); }
		ruleObject
		{ after(grammarAccess.getObjectDeclAccess().getObjectNameObjectParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__ArgumentsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsJvmArgumentTypeRefParserRuleCall_0_0()); }
		ruleJvmArgumentTypeRef
		{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsJvmArgumentTypeRefParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__ArgumentsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsJvmArgumentTypeRefParserRuleCall_1_1_0()); }
		ruleJvmArgumentTypeRef
		{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsJvmArgumentTypeRefParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__ArgumentsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsJvmArgumentTypeRefParserRuleCall_2_1_0()); }
		ruleJvmArgumentTypeRef
		{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsJvmArgumentTypeRefParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeRef__ArgumentsAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsJvmArgumentTypeRefParserRuleCall_2_2_1_0()); }
		ruleJvmArgumentTypeRef
		{ after(grammarAccess.getJvmParameterizedTypeRefAccess().getArgumentsJvmArgumentTypeRefParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmArgumentTypeRef__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmArgumentTypeRefAccess().getTypeJvmTypeReferenceParserRuleCall_0_0()); }
		ruleJvmTypeReference
		{ after(grammarAccess.getJvmArgumentTypeRefAccess().getTypeJvmTypeReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmArgumentTypeRef__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmArgumentTypeRefAccess().getTypeJvmWildcardTypeRefParserRuleCall_1_0()); }
		ruleJvmWildcardTypeRef
		{ after(grammarAccess.getJvmArgumentTypeRefAccess().getTypeJvmWildcardTypeRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForbMethod__JavaMethAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForbMethodAccess().getJavaMethJvmExecutableCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getForbMethodAccess().getJavaMethJvmExecutableFQNParserRuleCall_0_0_0_1()); }
			ruleFQN
			{ after(grammarAccess.getForbMethodAccess().getJavaMethJvmExecutableFQNParserRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getForbMethodAccess().getJavaMethJvmExecutableCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForbMethod__RepAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForbMethodAccess().getRepEventCrossReference_0_1_1_0()); }
		(
			{ before(grammarAccess.getForbMethodAccess().getRepEventIDTerminalRuleCall_0_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForbMethodAccess().getRepEventIDTerminalRuleCall_0_1_1_0_1()); }
		)
		{ after(grammarAccess.getForbMethodAccess().getRepEventCrossReference_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelMethodCall__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelMethodCallAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLabelMethodCallAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelMethodCall__MethAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelMethodCallAccess().getMethMethodParserRuleCall_2_0()); }
		ruleMethod
		{ after(grammarAccess.getLabelMethodCallAccess().getMethMethodParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__LeftSideAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getLeftSideObjectCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getMethodAccess().getLeftSideObjectIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMethodAccess().getLeftSideObjectIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getMethodAccess().getLeftSideObjectCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__MethNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getMethNameJvmExecutableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getMethodAccess().getMethNameJvmExecutableIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMethodAccess().getMethNameJvmExecutableIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getMethodAccess().getMethNameJvmExecutableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParListAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getParListParListParserRuleCall_3_0()); }
		ruleParList
		{ after(grammarAccess.getMethodAccess().getParListParListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParList__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParListAccess().getParametersParParserRuleCall_0_0()); }
		rulePar
		{ after(grammarAccess.getParListAccess().getParametersParParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParList__ParametersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParListAccess().getParametersParParserRuleCall_1_1_0()); }
		rulePar
		{ after(grammarAccess.getParListAccess().getParametersParParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Par__ValAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParAccess().getValObjectCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getParAccess().getValObjectIDTerminalRuleCall_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getParAccess().getValObjectIDTerminalRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getParAccess().getValObjectCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregateAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAggregateAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__LabAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregateAccess().getLabEventCrossReference_1_2_0_0()); }
		(
			{ before(grammarAccess.getAggregateAccess().getLabEventIDTerminalRuleCall_1_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAggregateAccess().getLabEventIDTerminalRuleCall_1_2_0_0_1()); }
		)
		{ after(grammarAccess.getAggregateAccess().getLabEventCrossReference_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__LabAssignment_1_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregateAccess().getLabEventCrossReference_1_2_1_1_0()); }
		(
			{ before(grammarAccess.getAggregateAccess().getLabEventIDTerminalRuleCall_1_2_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAggregateAccess().getLabEventIDTerminalRuleCall_1_2_1_1_0_1()); }
		)
		{ after(grammarAccess.getAggregateAccess().getLabEventCrossReference_1_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__OrderopAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getOrderopCommaKeyword_0_1_1_0()); }
		(
			{ before(grammarAccess.getOrderAccess().getOrderopCommaKeyword_0_1_1_0()); }
			','
			{ after(grammarAccess.getOrderAccess().getOrderopCommaKeyword_0_1_1_0()); }
		)
		{ after(grammarAccess.getOrderAccess().getOrderopCommaKeyword_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__RightAssignment_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getRightSimpleOrderParserRuleCall_0_1_2_0()); }
		ruleSimpleOrder
		{ after(grammarAccess.getOrderAccess().getRightSimpleOrderParserRuleCall_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrder__OrderopAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleOrderAccess().getOrderopVerticalLineKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getSimpleOrderAccess().getOrderopVerticalLineKeyword_1_1_0()); }
			'|'
			{ after(grammarAccess.getSimpleOrderAccess().getOrderopVerticalLineKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getSimpleOrderAccess().getOrderopVerticalLineKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrder__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleOrderAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getSimpleOrderAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__OrderEvAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getOrderEvEventCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getOrderEvEventIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryAccess().getOrderEvEventIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getOrderEvEventCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ElementopAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getElementopAlternatives_0_1_0()); }
		(rule__Primary__ElementopAlternatives_0_1_0)
		{ after(grammarAccess.getPrimaryAccess().getElementopAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ElementopAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getElementopAlternatives_1_3_0()); }
		(rule__Primary__ElementopAlternatives_1_3_0)
		{ after(grammarAccess.getPrimaryAccess().getElementopAlternatives_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalImplyExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalImplyExpressionAccess().getOperatorLogicalImplyParserRuleCall_1_1_0()); }
		ruleLogicalImply
		{ after(grammarAccess.getLogicalImplyExpressionAccess().getOperatorLogicalImplyParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalImplyExpression__RightExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalImplyExpressionAccess().getRightExpressionLogicalOrExpressionParserRuleCall_1_2_0()); }
		ruleLogicalOrExpression
		{ after(grammarAccess.getLogicalImplyExpressionAccess().getRightExpressionLogicalOrExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalImply__IMPLIESAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalImplyAccess().getIMPLIESEqualsSignGreaterThanSignKeyword_0()); }
		(
			{ before(grammarAccess.getLogicalImplyAccess().getIMPLIESEqualsSignGreaterThanSignKeyword_0()); }
			'=>'
			{ after(grammarAccess.getLogicalImplyAccess().getIMPLIESEqualsSignGreaterThanSignKeyword_0()); }
		)
		{ after(grammarAccess.getLogicalImplyAccess().getIMPLIESEqualsSignGreaterThanSignKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrParserRuleCall_1_1_0()); }
		ruleLogicalOr
		{ after(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__RightExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOrExpressionAccess().getRightExpressionLogicalAndExpressionParserRuleCall_1_2_0()); }
		ruleLogicalAndExpression
		{ after(grammarAccess.getLogicalOrExpressionAccess().getRightExpressionLogicalAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOr__ORAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOrAccess().getORVerticalLineVerticalLineKeyword_0()); }
		(
			{ before(grammarAccess.getLogicalOrAccess().getORVerticalLineVerticalLineKeyword_0()); }
			'||'
			{ after(grammarAccess.getLogicalOrAccess().getORVerticalLineVerticalLineKeyword_0()); }
		)
		{ after(grammarAccess.getLogicalOrAccess().getORVerticalLineVerticalLineKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndParserRuleCall_1_1_0()); }
		ruleLogicalAnd
		{ after(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__RightExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAndExpressionAccess().getRightExpressionComparisonExpressionParserRuleCall_1_2_0()); }
		ruleComparisonExpression
		{ after(grammarAccess.getLogicalAndExpressionAccess().getRightExpressionComparisonExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAnd__ANDAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAndAccess().getANDAmpersandAmpersandKeyword_0()); }
		(
			{ before(grammarAccess.getLogicalAndAccess().getANDAmpersandAmpersandKeyword_0()); }
			'&&'
			{ after(grammarAccess.getLogicalAndAccess().getANDAmpersandAmpersandKeyword_0()); }
		)
		{ after(grammarAccess.getLogicalAndAccess().getANDAmpersandAmpersandKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getOperatorComparingEQNEQOperatorParserRuleCall_1_1_0()); }
		ruleComparingEQNEQOperator
		{ after(grammarAccess.getComparisonExpressionAccess().getOperatorComparingEQNEQOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RightExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRightExpressionComparisonHigherOpExpressionParserRuleCall_1_2_0()); }
		ruleComparisonHigherOpExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getRightExpressionComparisonHigherOpExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonHigherOpExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonHigherOpExpressionAccess().getOperatorComparingRelOperatorParserRuleCall_1_1_0()); }
		ruleComparingRelOperator
		{ after(grammarAccess.getComparisonHigherOpExpressionAccess().getOperatorComparingRelOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonHigherOpExpression__RightExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonHigherOpExpressionAccess().getRightExpressionArithmeticExpressionParserRuleCall_1_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getComparisonHigherOpExpressionAccess().getRightExpressionArithmeticExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparingRelOperator__LESSAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparingRelOperatorAccess().getLESSLessThanSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getComparingRelOperatorAccess().getLESSLessThanSignKeyword_0_0()); }
			'<'
			{ after(grammarAccess.getComparingRelOperatorAccess().getLESSLessThanSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getComparingRelOperatorAccess().getLESSLessThanSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparingRelOperator__LESS_OR_EQUALAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparingRelOperatorAccess().getLESS_OR_EQUALLessThanSignEqualsSignKeyword_1_0()); }
		(
			{ before(grammarAccess.getComparingRelOperatorAccess().getLESS_OR_EQUALLessThanSignEqualsSignKeyword_1_0()); }
			'<='
			{ after(grammarAccess.getComparingRelOperatorAccess().getLESS_OR_EQUALLessThanSignEqualsSignKeyword_1_0()); }
		)
		{ after(grammarAccess.getComparingRelOperatorAccess().getLESS_OR_EQUALLessThanSignEqualsSignKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparingRelOperator__GREATER_OR_EQUALAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparingRelOperatorAccess().getGREATER_OR_EQUALGreaterThanSignEqualsSignKeyword_2_0()); }
		(
			{ before(grammarAccess.getComparingRelOperatorAccess().getGREATER_OR_EQUALGreaterThanSignEqualsSignKeyword_2_0()); }
			'>='
			{ after(grammarAccess.getComparingRelOperatorAccess().getGREATER_OR_EQUALGreaterThanSignEqualsSignKeyword_2_0()); }
		)
		{ after(grammarAccess.getComparingRelOperatorAccess().getGREATER_OR_EQUALGreaterThanSignEqualsSignKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparingRelOperator__GREATERAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparingRelOperatorAccess().getGREATERGreaterThanSignKeyword_3_0()); }
		(
			{ before(grammarAccess.getComparingRelOperatorAccess().getGREATERGreaterThanSignKeyword_3_0()); }
			'>'
			{ after(grammarAccess.getComparingRelOperatorAccess().getGREATERGreaterThanSignKeyword_3_0()); }
		)
		{ after(grammarAccess.getComparingRelOperatorAccess().getGREATERGreaterThanSignKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionExpressionAccess().getOperatorAdditionOperatorParserRuleCall_1_1_0()); }
		ruleAdditionOperator
		{ after(grammarAccess.getAdditionExpressionAccess().getOperatorAdditionOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__RightExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionExpressionAccess().getRightExpressionModularExpressionParserRuleCall_1_2_0()); }
		ruleModularExpression
		{ after(grammarAccess.getAdditionExpressionAccess().getRightExpressionModularExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__PLUSAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionOperatorAccess().getPLUSPlusSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getAdditionOperatorAccess().getPLUSPlusSignKeyword_0_0()); }
			'+'
			{ after(grammarAccess.getAdditionOperatorAccess().getPLUSPlusSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getAdditionOperatorAccess().getPLUSPlusSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__MINUSAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionOperatorAccess().getMINUSHyphenMinusKeyword_1_0()); }
		(
			{ before(grammarAccess.getAdditionOperatorAccess().getMINUSHyphenMinusKeyword_1_0()); }
			'-'
			{ after(grammarAccess.getAdditionOperatorAccess().getMINUSHyphenMinusKeyword_1_0()); }
		)
		{ after(grammarAccess.getAdditionOperatorAccess().getMINUSHyphenMinusKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModularExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModularExpressionAccess().getOperatorModularOperatorParserRuleCall_1_1_0()); }
		ruleModularOperator
		{ after(grammarAccess.getModularExpressionAccess().getOperatorModularOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModularExpression__RightExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModularExpressionAccess().getRightExpressionMultiplicationExpressionParserRuleCall_1_2_0()); }
		ruleMultiplicationExpression
		{ after(grammarAccess.getModularExpressionAccess().getRightExpressionMultiplicationExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModularOperator__MODAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModularOperatorAccess().getMODPercentSignKeyword_0()); }
		(
			{ before(grammarAccess.getModularOperatorAccess().getMODPercentSignKeyword_0()); }
			'%'
			{ after(grammarAccess.getModularOperatorAccess().getMODPercentSignKeyword_0()); }
		)
		{ after(grammarAccess.getModularOperatorAccess().getMODPercentSignKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__OperatorAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationExpressionAccess().getOperatorMultiplicationOperatorParserRuleCall_1_1_1_0()); }
		ruleMultiplicationOperator
		{ after(grammarAccess.getMultiplicationExpressionAccess().getOperatorMultiplicationOperatorParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__RightExpressionAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationExpressionAccess().getRightExpressionOperandParserRuleCall_1_1_2_0()); }
		ruleOperand
		{ after(grammarAccess.getMultiplicationExpressionAccess().getRightExpressionOperandParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__TIMESAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationOperatorAccess().getTIMESAsteriskKeyword_0_0()); }
		(
			{ before(grammarAccess.getMultiplicationOperatorAccess().getTIMESAsteriskKeyword_0_0()); }
			'*'
			{ after(grammarAccess.getMultiplicationOperatorAccess().getTIMESAsteriskKeyword_0_0()); }
		)
		{ after(grammarAccess.getMultiplicationOperatorAccess().getTIMESAsteriskKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__DIVIDEAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationOperatorAccess().getDIVIDESolidusKeyword_1_0()); }
		(
			{ before(grammarAccess.getMultiplicationOperatorAccess().getDIVIDESolidusKeyword_1_0()); }
			'/'
			{ after(grammarAccess.getMultiplicationOperatorAccess().getDIVIDESolidusKeyword_1_0()); }
		)
		{ after(grammarAccess.getMultiplicationOperatorAccess().getDIVIDESolidusKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryPreExpression__OperatorAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryPreExpressionAccess().getOperatorUnaryPreOperatorParserRuleCall_1_0_0()); }
		ruleUnaryPreOperator
		{ after(grammarAccess.getUnaryPreExpressionAccess().getOperatorUnaryPreOperatorParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryPreExpression__EnclosedExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryPreExpressionAccess().getEnclosedExpressionOperandParserRuleCall_1_1_0()); }
		ruleOperand
		{ after(grammarAccess.getUnaryPreExpressionAccess().getEnclosedExpressionOperandParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getNameLiteralParserRuleCall_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getLiteralExpressionAccess().getNameLiteralParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getNameAggregateExpressionParserRuleCall_1_0()); }
		ruleAggregateExpression
		{ after(grammarAccess.getLiteralExpressionAccess().getNameAggregateExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__PredNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameNeverTypeOfKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameNeverTypeOfKeyword_0_0_0()); }
			'neverTypeOf'
			{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameNeverTypeOfKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameNeverTypeOfKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__ObjAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectCrossReference_0_2_0()); }
		(
			{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectIDTerminalRuleCall_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectIDTerminalRuleCall_0_2_0_1()); }
		)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectCrossReference_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__TypeAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getTypeJvmTypeParserRuleCall_0_4_0()); }
		ruleJvmType
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getTypeJvmTypeParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__PredNameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameNoCallToKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameNoCallToKeyword_1_0_0()); }
			'noCallTo'
			{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameNoCallToKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameNoCallToKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__ObjAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjEventCrossReference_1_2_0()); }
		(
			{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjEventIDTerminalRuleCall_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjEventIDTerminalRuleCall_1_2_0_1()); }
		)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjEventCrossReference_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__PredNameAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameCallToKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameCallToKeyword_2_0_0()); }
			'callTo'
			{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameCallToKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameCallToKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__ObjAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjEventCrossReference_2_2_0()); }
		(
			{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjEventIDTerminalRuleCall_2_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjEventIDTerminalRuleCall_2_2_0_1()); }
		)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjEventCrossReference_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__PredNameAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameNotHardCodedKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameNotHardCodedKeyword_3_0_0()); }
			'notHardCoded'
			{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameNotHardCodedKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameNotHardCodedKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__ObjAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectCrossReference_3_2_0()); }
		(
			{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectIDTerminalRuleCall_3_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectIDTerminalRuleCall_3_2_0_1()); }
		)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectCrossReference_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__PredNameAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameLengthKeyword_4_0_0()); }
		(
			{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameLengthKeyword_4_0_0()); }
			'length'
			{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameLengthKeyword_4_0_0()); }
		)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameLengthKeyword_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__ObjAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectCrossReference_4_2_0()); }
		(
			{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectIDTerminalRuleCall_4_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectIDTerminalRuleCall_4_2_0_1()); }
		)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectCrossReference_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__PredNameAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameInstanceOfKeyword_5_0_0()); }
		(
			{ before(grammarAccess.getPreDefinedPredicatesAccess().getPredNameInstanceOfKeyword_5_0_0()); }
			'instanceOf'
			{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameInstanceOfKeyword_5_0_0()); }
		)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getPredNameInstanceOfKeyword_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__ObjAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectCrossReference_5_2_0()); }
		(
			{ before(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectIDTerminalRuleCall_5_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectIDTerminalRuleCall_5_2_0_1()); }
		)
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getObjObjectCrossReference_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDefinedPredicates__TypeAssignment_5_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDefinedPredicatesAccess().getTypeJvmTypeParserRuleCall_5_4_0()); }
		ruleJvmType
		{ after(grammarAccess.getPreDefinedPredicatesAccess().getTypeJvmTypeParserRuleCall_5_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmTypeAccess().getTypeJvmTypeCrossReference_0()); }
		(
			{ before(grammarAccess.getJvmTypeAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getJvmTypeAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getJvmTypeAccess().getTypeJvmTypeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateExpression__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregateExpressionAccess().getValueSuperTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAggregateExpressionAccess().getValueSuperTypeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAggregateExpressionAccess().getValueSuperTypeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAggregateExpressionAccess().getValueSuperTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getValAlternatives_1_0()); }
		(rule__Literal__ValAlternatives_1_0)
		{ after(grammarAccess.getLiteralAccess().getValAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryPreOperator__NOTAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryPreOperatorAccess().getNOTExclamationMarkKeyword_0()); }
		(
			{ before(grammarAccess.getUnaryPreOperatorAccess().getNOTExclamationMarkKeyword_0()); }
			'!'
			{ after(grammarAccess.getUnaryPreOperatorAccess().getNOTExclamationMarkKeyword_0()); }
		)
		{ after(grammarAccess.getUnaryPreOperatorAccess().getNOTExclamationMarkKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparingEQNEQOperator__EQUALAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparingEQNEQOperatorAccess().getEQUALEqualsSignEqualsSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getComparingEQNEQOperatorAccess().getEQUALEqualsSignEqualsSignKeyword_0_0()); }
			'=='
			{ after(grammarAccess.getComparingEQNEQOperatorAccess().getEQUALEqualsSignEqualsSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getComparingEQNEQOperatorAccess().getEQUALEqualsSignEqualsSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparingEQNEQOperator__UNEQUALAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparingEQNEQOperatorAccess().getUNEQUALExclamationMarkEqualsSignKeyword_1_0()); }
		(
			{ before(grammarAccess.getComparingEQNEQOperatorAccess().getUNEQUALExclamationMarkEqualsSignKeyword_1_0()); }
			'!='
			{ after(grammarAccess.getComparingEQNEQOperatorAccess().getUNEQUALExclamationMarkEqualsSignKeyword_1_0()); }
		)
		{ after(grammarAccess.getComparingEQNEQOperatorAccess().getUNEQUALExclamationMarkEqualsSignKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cons__ConsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsAccess().getConsArrayElementsParserRuleCall_0_0_0()); }
		ruleArrayElements
		{ after(grammarAccess.getConsAccess().getConsArrayElementsParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cons__LitsleftAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsAccess().getLitsleftLitListParserRuleCall_0_3_0()); }
		ruleLitList
		{ after(grammarAccess.getConsAccess().getLitsleftLitListParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cons__ConsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsAccess().getConsLiteralExpressionParserRuleCall_1_0()); }
		ruleLiteralExpression
		{ after(grammarAccess.getConsAccess().getConsLiteralExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElements__ElAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayElementsAccess().getElElementsKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getArrayElementsAccess().getElElementsKeyword_0_0_0()); }
			'elements('
			{ after(grammarAccess.getArrayElementsAccess().getElElementsKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getArrayElementsAccess().getElElementsKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElements__ConsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayElementsAccess().getConsConsPredParserRuleCall_0_1_0()); }
		ruleConsPred
		{ after(grammarAccess.getArrayElementsAccess().getConsConsPredParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElements__ConsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayElementsAccess().getConsConsPredParserRuleCall_1_0()); }
		ruleConsPred
		{ after(grammarAccess.getArrayElementsAccess().getConsConsPredParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__ConsPredAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsPredAccess().getConsPredAlgKeyword_0_0_0_0()); }
		(
			{ before(grammarAccess.getConsPredAccess().getConsPredAlgKeyword_0_0_0_0()); }
			'alg('
			{ after(grammarAccess.getConsPredAccess().getConsPredAlgKeyword_0_0_0_0()); }
		)
		{ after(grammarAccess.getConsPredAccess().getConsPredAlgKeyword_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__LitAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsPredAccess().getLitLiteralExpressionParserRuleCall_0_0_1_0()); }
		ruleLiteralExpression
		{ after(grammarAccess.getConsPredAccess().getLitLiteralExpressionParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__ConsPredAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsPredAccess().getConsPredModeKeyword_0_1_0_0()); }
		(
			{ before(grammarAccess.getConsPredAccess().getConsPredModeKeyword_0_1_0_0()); }
			'mode('
			{ after(grammarAccess.getConsPredAccess().getConsPredModeKeyword_0_1_0_0()); }
		)
		{ after(grammarAccess.getConsPredAccess().getConsPredModeKeyword_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__LitAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsPredAccess().getLitLiteralExpressionParserRuleCall_0_1_1_0()); }
		ruleLiteralExpression
		{ after(grammarAccess.getConsPredAccess().getLitLiteralExpressionParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__ConsPredAssignment_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsPredAccess().getConsPredPadKeyword_0_2_0_0()); }
		(
			{ before(grammarAccess.getConsPredAccess().getConsPredPadKeyword_0_2_0_0()); }
			'pad('
			{ after(grammarAccess.getConsPredAccess().getConsPredPadKeyword_0_2_0_0()); }
		)
		{ after(grammarAccess.getConsPredAccess().getConsPredPadKeyword_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__LitAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsPredAccess().getLitLiteralExpressionParserRuleCall_0_2_1_0()); }
		ruleLiteralExpression
		{ after(grammarAccess.getConsPredAccess().getLitLiteralExpressionParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__PartAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsPredAccess().getPartPartKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getConsPredAccess().getPartPartKeyword_1_0_0()); }
			'part('
			{ after(grammarAccess.getConsPredAccess().getPartPartKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getConsPredAccess().getPartPartKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__IndAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsPredAccess().getIndIntegerLiteralParserRuleCall_1_1_0()); }
		ruleIntegerLiteral
		{ after(grammarAccess.getConsPredAccess().getIndIntegerLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__SplitAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsPredAccess().getSplitStringLiteralParserRuleCall_1_3_0()); }
		ruleStringLiteral
		{ after(grammarAccess.getConsPredAccess().getSplitStringLiteralParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__LitAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsPredAccess().getLitLiteralExpressionParserRuleCall_1_5_0()); }
		ruleLiteralExpression
		{ after(grammarAccess.getConsPredAccess().getLitLiteralExpressionParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsPred__LitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsPredAccess().getLitLiteralExpressionParserRuleCall_2_0()); }
		ruleLiteralExpression
		{ after(grammarAccess.getConsPredAccess().getLitLiteralExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LitList__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLitListAccess().getParametersLiteralParserRuleCall_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getLitListAccess().getParametersLiteralParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LitList__ParametersAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLitListAccess().getParametersLiteralParserRuleCall_1_1_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getLitListAccess().getParametersLiteralParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__PredNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredAccess().getPredNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPredAccess().getPredNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__ParListAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredAccess().getParListSuParListParserRuleCall_1_0_1_0()); }
		ruleSuParList
		{ after(grammarAccess.getPredAccess().getParListSuParListParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPred__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqPredAccess().getOperatorLogicalOrParserRuleCall_1_1_0()); }
		ruleLogicalOr
		{ after(grammarAccess.getReqPredAccess().getOperatorLogicalOrParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPred__RightExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqPredAccess().getRightExpressionPredLitParserRuleCall_1_2_0()); }
		rulePredLit
		{ after(grammarAccess.getReqPredAccess().getRightExpressionPredLitParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredLit__ConsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredLitAccess().getConsConstraintParserRuleCall_0_0_0()); }
		ruleConstraint
		{ after(grammarAccess.getPredLitAccess().getConsConstraintParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredLit__NotAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredLitAccess().getNotExclamationMarkKeyword_1_0()); }
		(
			{ before(grammarAccess.getPredLitAccess().getNotExclamationMarkKeyword_1_0()); }
			'!'
			{ after(grammarAccess.getPredLitAccess().getNotExclamationMarkKeyword_1_0()); }
		)
		{ after(grammarAccess.getPredLitAccess().getNotExclamationMarkKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredLit__PredAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredLitAccess().getPredPredParserRuleCall_2_0()); }
		rulePred
		{ after(grammarAccess.getPredLitAccess().getPredPredParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnsPred__PredLitAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnsPredAccess().getPredLitPredLitParserRuleCall_0_0()); }
		rulePredLit
		{ after(grammarAccess.getEnsPredAccess().getPredLitPredLitParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnsPred__LabelCondAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnsPredAccess().getLabelCondSuperTypeCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getEnsPredAccess().getLabelCondSuperTypeIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEnsPredAccess().getLabelCondSuperTypeIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getEnsPredAccess().getLabelCondSuperTypeCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuParList__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuParListAccess().getParametersSuParParserRuleCall_0_0()); }
		ruleSuPar
		{ after(grammarAccess.getSuParListAccess().getParametersSuParParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuParList__ParametersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuParListAccess().getParametersSuParParserRuleCall_1_1_0()); }
		ruleSuPar
		{ after(grammarAccess.getSuParListAccess().getParametersSuParParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuPar__ValAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuParAccess().getValConsPredParserRuleCall_1_0_0()); }
		ruleConsPred
		{ after(grammarAccess.getSuParAccess().getValConsPredParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObjectAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ParamTypesAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); }
		ruleJvmTypeReference
		{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); }
		ruleJvmTypeReference
		{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ReturnTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); }
		ruleJvmTypeReference
		{ after(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
		ruleJvmArgumentTypeReference
		{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
		ruleJvmArgumentTypeReference
		{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__TypeAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0()); }
		(
			{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeValidIDParserRuleCall_1_4_1_0_1()); }
			ruleValidID
			{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeValidIDParserRuleCall_1_4_1_0_1()); }
		)
		{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); }
		ruleJvmArgumentTypeReference
		{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); }
		ruleJvmArgumentTypeReference
		{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0()); }
		ruleJvmUpperBound
		{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0()); }
		ruleJvmUpperBoundAnded
		{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0()); }
		ruleJvmLowerBound
		{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0()); }
		ruleJvmLowerBoundAnded
		{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__TypeReferenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
		ruleJvmTypeReference
		{ after(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__TypeReferenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
		ruleJvmTypeReference
		{ after(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__TypeReferenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
		ruleJvmTypeReference
		{ after(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBoundAnded__TypeReferenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
		ruleJvmTypeReference
		{ after(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__StaticAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
		(
			{ before(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
			'static'
			{ after(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
		)
		{ after(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ExtensionAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
			'extension'
			{ after(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedTypeAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); }
		(
			{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameInStaticImportParserRuleCall_1_0_2_0_1()); }
			ruleQualifiedNameInStaticImport
			{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameInStaticImportParserRuleCall_1_0_2_0_1()); }
		)
		{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__WildcardAssignment_1_0_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0()); }
		(
			{ before(grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0()); }
			'*'
			{ after(grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0()); }
		)
		{ after(grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__MemberNameAssignment_1_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0()); }
		ruleValidID
		{ after(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedNamespaceAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'?|'\'' ('\\' .|~(('\\'|'\'')))* '\''?);

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
