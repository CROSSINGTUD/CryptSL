/**
 * generated by Xtext 2.10.0
 */
package de.darmstadt.tu.crossing.cryptSL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see de.darmstadt.tu.crossing.cryptSL.CryptSLFactory
 * @model kind="package"
 * @generated
 */
public interface CryptSLPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "cryptSL";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.darmstadt.de/tu/crossing/CryptSL";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "cryptSL";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  CryptSLPackage eINSTANCE = de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl.init();

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.DomainmodelImpl <em>Domainmodel</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.DomainmodelImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getDomainmodel()
   * @generated
   */
  int DOMAINMODEL = 0;

  /**
   * The feature id for the '<em><b>Java Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__JAVA_TYPE = 0;

  /**
   * The feature id for the '<em><b>Object</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__OBJECT = 1;

  /**
   * The feature id for the '<em><b>Method</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__METHOD = 2;

  /**
   * The feature id for the '<em><b>Event</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__EVENT = 3;

  /**
   * The feature id for the '<em><b>Order</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__ORDER = 4;

  /**
   * The feature id for the '<em><b>Req</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__REQ = 5;

  /**
   * The number of structural features of the '<em>Domainmodel</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.EventImpl <em>Event</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.EventImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getEvent()
   * @generated
   */
  int EVENT = 1;

  /**
   * The feature id for the '<em><b>Method</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT__METHOD = 0;

  /**
   * The feature id for the '<em><b>Agg</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT__AGG = 1;

  /**
   * The feature id for the '<em><b>Lab</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT__LAB = 2;

  /**
   * The number of structural features of the '<em>Event</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ExpressionImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 2;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.OrderEvImpl <em>Order Ev</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.OrderEvImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getOrderEv()
   * @generated
   */
  int ORDER_EV = 3;

  /**
   * The feature id for the '<em><b>Methx</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDER_EV__METHX = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Order Ev</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDER_EV_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.MethodImpl <em>Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.MethodImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getMethod()
   * @generated
   */
  int METHOD = 4;

  /**
   * The feature id for the '<em><b>Label</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__LABEL = 0;

  /**
   * The feature id for the '<em><b>Left Side</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__LEFT_SIDE = 1;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__PARAMETERS = 2;

  /**
   * The number of structural features of the '<em>Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ForbMethodImpl <em>Forb Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ForbMethodImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getForbMethod()
   * @generated
   */
  int FORB_METHOD = 5;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORB_METHOD__PARAMETERS = 0;

  /**
   * The feature id for the '<em><b>Rep</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORB_METHOD__REP = 1;

  /**
   * The number of structural features of the '<em>Forb Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORB_METHOD_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ObjectDeclImpl <em>Object Decl</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ObjectDeclImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getObjectDecl()
   * @generated
   */
  int OBJECT_DECL = 6;

  /**
   * The feature id for the '<em><b>Object Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_DECL__OBJECT_TYPE = 0;

  /**
   * The feature id for the '<em><b>Object Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_DECL__OBJECT_NAME = 1;

  /**
   * The number of structural features of the '<em>Object Decl</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_DECL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.LabelImpl <em>Label</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.LabelImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getLabel()
   * @generated
   */
  int LABEL = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL__NAME = 0;

  /**
   * The number of structural features of the '<em>Label</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ObjectImpl <em>Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ObjectImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getObject()
   * @generated
   */
  int OBJECT = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT__NAME = 0;

  /**
   * The number of structural features of the '<em>Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.OrderImpl <em>Order</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.OrderImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getOrder()
   * @generated
   */
  int ORDER = 9;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDER__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDER__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Order</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDER_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.SimpleOrderImpl <em>Simple Order</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.SimpleOrderImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getSimpleOrder()
   * @generated
   */
  int SIMPLE_ORDER = 10;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_ORDER__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_ORDER__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Simple Order</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_ORDER_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;


  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel <em>Domainmodel</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Domainmodel</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel
   * @generated
   */
  EClass getDomainmodel();

  /**
   * Returns the meta object for the reference '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel#getJavaType <em>Java Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Java Type</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel#getJavaType()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_JavaType();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel#getObject <em>Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Object</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel#getObject()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_Object();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel#getMethod <em>Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Method</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel#getMethod()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_Method();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel#getEvent <em>Event</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Event</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel#getEvent()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_Event();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel#getOrder <em>Order</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Order</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel#getOrder()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_Order();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel#getReq <em>Req</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Req</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel#getReq()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_Req();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Event <em>Event</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Event</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Event
   * @generated
   */
  EClass getEvent();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Event#getMethod <em>Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Method</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Event#getMethod()
   * @see #getEvent()
   * @generated
   */
  EReference getEvent_Method();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Event#getAgg <em>Agg</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Agg</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Event#getAgg()
   * @see #getEvent()
   * @generated
   */
  EReference getEvent_Agg();

  /**
   * Returns the meta object for the reference list '{@link de.darmstadt.tu.crossing.cryptSL.Event#getLab <em>Lab</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Lab</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Event#getLab()
   * @see #getEvent()
   * @generated
   */
  EReference getEvent_Lab();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.OrderEv <em>Order Ev</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Order Ev</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.OrderEv
   * @generated
   */
  EClass getOrderEv();

  /**
   * Returns the meta object for the reference '{@link de.darmstadt.tu.crossing.cryptSL.OrderEv#getMethx <em>Methx</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Methx</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.OrderEv#getMethx()
   * @see #getOrderEv()
   * @generated
   */
  EReference getOrderEv_Methx();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Method <em>Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Method</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Method
   * @generated
   */
  EClass getMethod();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Method#getLabel <em>Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Label</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Method#getLabel()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_Label();

  /**
   * Returns the meta object for the reference '{@link de.darmstadt.tu.crossing.cryptSL.Method#getLeftSide <em>Left Side</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Left Side</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Method#getLeftSide()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_LeftSide();

  /**
   * Returns the meta object for the reference list '{@link de.darmstadt.tu.crossing.cryptSL.Method#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Parameters</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Method#getParameters()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_Parameters();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.ForbMethod <em>Forb Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Forb Method</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ForbMethod
   * @generated
   */
  EClass getForbMethod();

  /**
   * Returns the meta object for the reference list '{@link de.darmstadt.tu.crossing.cryptSL.ForbMethod#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Parameters</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ForbMethod#getParameters()
   * @see #getForbMethod()
   * @generated
   */
  EReference getForbMethod_Parameters();

  /**
   * Returns the meta object for the reference '{@link de.darmstadt.tu.crossing.cryptSL.ForbMethod#getRep <em>Rep</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Rep</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ForbMethod#getRep()
   * @see #getForbMethod()
   * @generated
   */
  EReference getForbMethod_Rep();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.ObjectDecl <em>Object Decl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Object Decl</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ObjectDecl
   * @generated
   */
  EClass getObjectDecl();

  /**
   * Returns the meta object for the reference '{@link de.darmstadt.tu.crossing.cryptSL.ObjectDecl#getObjectType <em>Object Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Object Type</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ObjectDecl#getObjectType()
   * @see #getObjectDecl()
   * @generated
   */
  EReference getObjectDecl_ObjectType();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.ObjectDecl#getObjectName <em>Object Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Object Name</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ObjectDecl#getObjectName()
   * @see #getObjectDecl()
   * @generated
   */
  EReference getObjectDecl_ObjectName();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Label <em>Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Label</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Label
   * @generated
   */
  EClass getLabel();

  /**
   * Returns the meta object for the attribute '{@link de.darmstadt.tu.crossing.cryptSL.Label#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Label#getName()
   * @see #getLabel()
   * @generated
   */
  EAttribute getLabel_Name();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Object <em>Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Object</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Object
   * @generated
   */
  EClass getObject();

  /**
   * Returns the meta object for the attribute '{@link de.darmstadt.tu.crossing.cryptSL.Object#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Object#getName()
   * @see #getObject()
   * @generated
   */
  EAttribute getObject_Name();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Order <em>Order</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Order</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Order
   * @generated
   */
  EClass getOrder();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.Order#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Order#getLeft()
   * @see #getOrder()
   * @generated
   */
  EReference getOrder_Left();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.Order#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Order#getRight()
   * @see #getOrder()
   * @generated
   */
  EReference getOrder_Right();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.SimpleOrder <em>Simple Order</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Order</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.SimpleOrder
   * @generated
   */
  EClass getSimpleOrder();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.SimpleOrder#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.SimpleOrder#getLeft()
   * @see #getSimpleOrder()
   * @generated
   */
  EReference getSimpleOrder_Left();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.SimpleOrder#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.SimpleOrder#getRight()
   * @see #getSimpleOrder()
   * @generated
   */
  EReference getSimpleOrder_Right();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  CryptSLFactory getCryptSLFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.DomainmodelImpl <em>Domainmodel</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.DomainmodelImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getDomainmodel()
     * @generated
     */
    EClass DOMAINMODEL = eINSTANCE.getDomainmodel();

    /**
     * The meta object literal for the '<em><b>Java Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__JAVA_TYPE = eINSTANCE.getDomainmodel_JavaType();

    /**
     * The meta object literal for the '<em><b>Object</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__OBJECT = eINSTANCE.getDomainmodel_Object();

    /**
     * The meta object literal for the '<em><b>Method</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__METHOD = eINSTANCE.getDomainmodel_Method();

    /**
     * The meta object literal for the '<em><b>Event</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__EVENT = eINSTANCE.getDomainmodel_Event();

    /**
     * The meta object literal for the '<em><b>Order</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__ORDER = eINSTANCE.getDomainmodel_Order();

    /**
     * The meta object literal for the '<em><b>Req</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__REQ = eINSTANCE.getDomainmodel_Req();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.EventImpl <em>Event</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.EventImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getEvent()
     * @generated
     */
    EClass EVENT = eINSTANCE.getEvent();

    /**
     * The meta object literal for the '<em><b>Method</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EVENT__METHOD = eINSTANCE.getEvent_Method();

    /**
     * The meta object literal for the '<em><b>Agg</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EVENT__AGG = eINSTANCE.getEvent_Agg();

    /**
     * The meta object literal for the '<em><b>Lab</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EVENT__LAB = eINSTANCE.getEvent_Lab();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ExpressionImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.OrderEvImpl <em>Order Ev</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.OrderEvImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getOrderEv()
     * @generated
     */
    EClass ORDER_EV = eINSTANCE.getOrderEv();

    /**
     * The meta object literal for the '<em><b>Methx</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ORDER_EV__METHX = eINSTANCE.getOrderEv_Methx();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.MethodImpl <em>Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.MethodImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getMethod()
     * @generated
     */
    EClass METHOD = eINSTANCE.getMethod();

    /**
     * The meta object literal for the '<em><b>Label</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__LABEL = eINSTANCE.getMethod_Label();

    /**
     * The meta object literal for the '<em><b>Left Side</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__LEFT_SIDE = eINSTANCE.getMethod_LeftSide();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__PARAMETERS = eINSTANCE.getMethod_Parameters();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ForbMethodImpl <em>Forb Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ForbMethodImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getForbMethod()
     * @generated
     */
    EClass FORB_METHOD = eINSTANCE.getForbMethod();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORB_METHOD__PARAMETERS = eINSTANCE.getForbMethod_Parameters();

    /**
     * The meta object literal for the '<em><b>Rep</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORB_METHOD__REP = eINSTANCE.getForbMethod_Rep();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ObjectDeclImpl <em>Object Decl</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ObjectDeclImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getObjectDecl()
     * @generated
     */
    EClass OBJECT_DECL = eINSTANCE.getObjectDecl();

    /**
     * The meta object literal for the '<em><b>Object Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OBJECT_DECL__OBJECT_TYPE = eINSTANCE.getObjectDecl_ObjectType();

    /**
     * The meta object literal for the '<em><b>Object Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OBJECT_DECL__OBJECT_NAME = eINSTANCE.getObjectDecl_ObjectName();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.LabelImpl <em>Label</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.LabelImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getLabel()
     * @generated
     */
    EClass LABEL = eINSTANCE.getLabel();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LABEL__NAME = eINSTANCE.getLabel_Name();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ObjectImpl <em>Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ObjectImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getObject()
     * @generated
     */
    EClass OBJECT = eINSTANCE.getObject();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OBJECT__NAME = eINSTANCE.getObject_Name();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.OrderImpl <em>Order</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.OrderImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getOrder()
     * @generated
     */
    EClass ORDER = eINSTANCE.getOrder();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ORDER__LEFT = eINSTANCE.getOrder_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ORDER__RIGHT = eINSTANCE.getOrder_Right();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.SimpleOrderImpl <em>Simple Order</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.SimpleOrderImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getSimpleOrder()
     * @generated
     */
    EClass SIMPLE_ORDER = eINSTANCE.getSimpleOrder();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_ORDER__LEFT = eINSTANCE.getSimpleOrder_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_ORDER__RIGHT = eINSTANCE.getSimpleOrder_Right();

  }

} //CryptSLPackage
