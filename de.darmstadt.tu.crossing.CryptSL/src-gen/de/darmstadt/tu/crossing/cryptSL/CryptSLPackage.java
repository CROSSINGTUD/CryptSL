/**
 * generated by Xtext 2.10.0
 */
package de.darmstadt.tu.crossing.cryptSL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see de.darmstadt.tu.crossing.cryptSL.CryptSLFactory
 * @model kind="package"
 * @generated
 */
public interface CryptSLPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "cryptSL";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.darmstadt.de/tu/crossing/CryptSL";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "cryptSL";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  CryptSLPackage eINSTANCE = de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl.init();

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.DomainmodelImpl <em>Domainmodel</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.DomainmodelImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getDomainmodel()
   * @generated
   */
  int DOMAINMODEL = 0;

  /**
   * The feature id for the '<em><b>Java Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__JAVA_TYPE = 0;

  /**
   * The feature id for the '<em><b>Object</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__OBJECT = 1;

  /**
   * The feature id for the '<em><b>Method</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__METHOD = 2;

  /**
   * The feature id for the '<em><b>Event</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__EVENT = 3;

  /**
   * The feature id for the '<em><b>Order</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__ORDER = 4;

  /**
   * The feature id for the '<em><b>Req</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__REQ = 5;

  /**
   * The feature id for the '<em><b>Ens</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL__ENS = 6;

  /**
   * The number of structural features of the '<em>Domainmodel</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAINMODEL_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ObjectDeclImpl <em>Object Decl</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ObjectDeclImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getObjectDecl()
   * @generated
   */
  int OBJECT_DECL = 1;

  /**
   * The feature id for the '<em><b>Object Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_DECL__OBJECT_TYPE = 0;

  /**
   * The feature id for the '<em><b>Object Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_DECL__OBJECT_NAME = 1;

  /**
   * The number of structural features of the '<em>Object Decl</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_DECL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.EventImpl <em>Event</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.EventImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getEvent()
   * @generated
   */
  int EVENT = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT__NAME = 0;

  /**
   * The number of structural features of the '<em>Event</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ForbMethodImpl <em>Forb Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ForbMethodImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getForbMethod()
   * @generated
   */
  int FORB_METHOD = 3;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORB_METHOD__PARAMETERS = 0;

  /**
   * The feature id for the '<em><b>Rep</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORB_METHOD__REP = 1;

  /**
   * The number of structural features of the '<em>Forb Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORB_METHOD_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.LabelMethodCallImpl <em>Label Method Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.LabelMethodCallImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getLabelMethodCall()
   * @generated
   */
  int LABEL_METHOD_CALL = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_METHOD_CALL__NAME = EVENT__NAME;

  /**
   * The feature id for the '<em><b>Meth</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_METHOD_CALL__METH = EVENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Label Method Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_METHOD_CALL_FEATURE_COUNT = EVENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.MethodImpl <em>Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.MethodImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getMethod()
   * @generated
   */
  int METHOD = 5;

  /**
   * The feature id for the '<em><b>Left Side</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__LEFT_SIDE = 0;

  /**
   * The feature id for the '<em><b>Meth Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__METH_NAME = 1;

  /**
   * The feature id for the '<em><b>Par List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__PAR_LIST = 2;

  /**
   * The number of structural features of the '<em>Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ParListImpl <em>Par List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ParListImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getParList()
   * @generated
   */
  int PAR_LIST = 6;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAR_LIST__PARAMETERS = 0;

  /**
   * The number of structural features of the '<em>Par List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAR_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ParImpl <em>Par</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ParImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getPar()
   * @generated
   */
  int PAR = 7;

  /**
   * The feature id for the '<em><b>Val</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAR__VAL = 0;

  /**
   * The number of structural features of the '<em>Par</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.AggregateImpl <em>Aggregate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.AggregateImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getAggregate()
   * @generated
   */
  int AGGREGATE = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AGGREGATE__NAME = EVENT__NAME;

  /**
   * The feature id for the '<em><b>Lab</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AGGREGATE__LAB = EVENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Aggregate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AGGREGATE_FEATURE_COUNT = EVENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ExpressionImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 9;

  /**
   * The feature id for the '<em><b>Order Ev</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__ORDER_EV = 0;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__LEFT = 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__RIGHT = 2;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ConstraintImpl <em>Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ConstraintImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getConstraint()
   * @generated
   */
  int CONSTRAINT = 10;

  /**
   * The feature id for the '<em><b>Cons</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__CONS = 0;

  /**
   * The feature id for the '<em><b>Algl</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__ALGL = 1;

  /**
   * The feature id for the '<em><b>Algr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__ALGR = 2;

  /**
   * The feature id for the '<em><b>Left Side</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__LEFT_SIDE = 3;

  /**
   * The feature id for the '<em><b>Pred Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__PRED_NAME = 4;

  /**
   * The feature id for the '<em><b>Par List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__PAR_LIST = 5;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__LEFT = 6;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__RIGHT = 7;

  /**
   * The number of structural features of the '<em>Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT_FEATURE_COUNT = 8;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ConsListImpl <em>Cons List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ConsListImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getConsList()
   * @generated
   */
  int CONS_LIST = 11;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONS_LIST__LIST = 0;

  /**
   * The number of structural features of the '<em>Cons List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONS_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ConsImpl <em>Cons</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ConsImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getCons()
   * @generated
   */
  int CONS = 12;

  /**
   * The feature id for the '<em><b>Cons</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONS__CONS = 0;

  /**
   * The feature id for the '<em><b>Litsleft</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONS__LITSLEFT = 1;

  /**
   * The number of structural features of the '<em>Cons</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.NoEqImpl <em>No Eq</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.NoEqImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getNoEq()
   * @generated
   */
  int NO_EQ = 13;

  /**
   * The feature id for the '<em><b>Cons</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_EQ__CONS = CONS__CONS;

  /**
   * The feature id for the '<em><b>Litsleft</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_EQ__LITSLEFT = CONS__LITSLEFT;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_EQ__LEFT = CONS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_EQ__RIGHT = CONS_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>No Eq</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_EQ_FEATURE_COUNT = CONS_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ConsPredImpl <em>Cons Pred</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ConsPredImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getConsPred()
   * @generated
   */
  int CONS_PRED = 14;

  /**
   * The feature id for the '<em><b>Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONS_PRED__NAME = 0;

  /**
   * The number of structural features of the '<em>Cons Pred</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONS_PRED_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.LitListImpl <em>Lit List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.LitListImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getLitList()
   * @generated
   */
  int LIT_LIST = 15;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIT_LIST__PARAMETERS = 0;

  /**
   * The number of structural features of the '<em>Lit List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIT_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ObAcImpl <em>Ob Ac</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ObAcImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getObAc()
   * @generated
   */
  int OB_AC = 16;

  /**
   * The feature id for the '<em><b>Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OB_AC__NAME = 0;

  /**
   * The number of structural features of the '<em>Ob Ac</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OB_AC_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ObjectImpl <em>Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.ObjectImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getObject()
   * @generated
   */
  int OBJECT = 17;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT__NAME = 0;

  /**
   * The number of structural features of the '<em>Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.OrderImpl <em>Order</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.OrderImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getOrder()
   * @generated
   */
  int ORDER = 18;

  /**
   * The feature id for the '<em><b>Order Ev</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDER__ORDER_EV = EXPRESSION__ORDER_EV;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDER__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDER__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Order</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDER_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.SimpleOrderImpl <em>Simple Order</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.darmstadt.tu.crossing.cryptSL.impl.SimpleOrderImpl
   * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getSimpleOrder()
   * @generated
   */
  int SIMPLE_ORDER = 19;

  /**
   * The feature id for the '<em><b>Order Ev</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_ORDER__ORDER_EV = EXPRESSION__ORDER_EV;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_ORDER__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_ORDER__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Simple Order</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_ORDER_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;


  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel <em>Domainmodel</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Domainmodel</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel
   * @generated
   */
  EClass getDomainmodel();

  /**
   * Returns the meta object for the reference '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel#getJavaType <em>Java Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Java Type</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel#getJavaType()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_JavaType();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel#getObject <em>Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Object</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel#getObject()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_Object();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel#getMethod <em>Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Method</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel#getMethod()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_Method();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel#getEvent <em>Event</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Event</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel#getEvent()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_Event();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel#getOrder <em>Order</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Order</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel#getOrder()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_Order();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel#getReq <em>Req</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Req</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel#getReq()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_Req();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Domainmodel#getEns <em>Ens</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ens</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Domainmodel#getEns()
   * @see #getDomainmodel()
   * @generated
   */
  EReference getDomainmodel_Ens();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.ObjectDecl <em>Object Decl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Object Decl</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ObjectDecl
   * @generated
   */
  EClass getObjectDecl();

  /**
   * Returns the meta object for the reference '{@link de.darmstadt.tu.crossing.cryptSL.ObjectDecl#getObjectType <em>Object Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Object Type</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ObjectDecl#getObjectType()
   * @see #getObjectDecl()
   * @generated
   */
  EReference getObjectDecl_ObjectType();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.ObjectDecl#getObjectName <em>Object Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Object Name</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ObjectDecl#getObjectName()
   * @see #getObjectDecl()
   * @generated
   */
  EReference getObjectDecl_ObjectName();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Event <em>Event</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Event</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Event
   * @generated
   */
  EClass getEvent();

  /**
   * Returns the meta object for the attribute '{@link de.darmstadt.tu.crossing.cryptSL.Event#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Event#getName()
   * @see #getEvent()
   * @generated
   */
  EAttribute getEvent_Name();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.ForbMethod <em>Forb Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Forb Method</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ForbMethod
   * @generated
   */
  EClass getForbMethod();

  /**
   * Returns the meta object for the reference list '{@link de.darmstadt.tu.crossing.cryptSL.ForbMethod#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Parameters</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ForbMethod#getParameters()
   * @see #getForbMethod()
   * @generated
   */
  EReference getForbMethod_Parameters();

  /**
   * Returns the meta object for the reference '{@link de.darmstadt.tu.crossing.cryptSL.ForbMethod#getRep <em>Rep</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Rep</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ForbMethod#getRep()
   * @see #getForbMethod()
   * @generated
   */
  EReference getForbMethod_Rep();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.LabelMethodCall <em>Label Method Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Label Method Call</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.LabelMethodCall
   * @generated
   */
  EClass getLabelMethodCall();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.LabelMethodCall#getMeth <em>Meth</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Meth</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.LabelMethodCall#getMeth()
   * @see #getLabelMethodCall()
   * @generated
   */
  EReference getLabelMethodCall_Meth();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Method <em>Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Method</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Method
   * @generated
   */
  EClass getMethod();

  /**
   * Returns the meta object for the reference '{@link de.darmstadt.tu.crossing.cryptSL.Method#getLeftSide <em>Left Side</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Left Side</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Method#getLeftSide()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_LeftSide();

  /**
   * Returns the meta object for the attribute '{@link de.darmstadt.tu.crossing.cryptSL.Method#getMethName <em>Meth Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Meth Name</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Method#getMethName()
   * @see #getMethod()
   * @generated
   */
  EAttribute getMethod_MethName();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.Method#getParList <em>Par List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Par List</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Method#getParList()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_ParList();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.ParList <em>Par List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Par List</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ParList
   * @generated
   */
  EClass getParList();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.ParList#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ParList#getParameters()
   * @see #getParList()
   * @generated
   */
  EReference getParList_Parameters();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Par <em>Par</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Par</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Par
   * @generated
   */
  EClass getPar();

  /**
   * Returns the meta object for the reference '{@link de.darmstadt.tu.crossing.cryptSL.Par#getVal <em>Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Val</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Par#getVal()
   * @see #getPar()
   * @generated
   */
  EReference getPar_Val();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Aggregate <em>Aggregate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Aggregate</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Aggregate
   * @generated
   */
  EClass getAggregate();

  /**
   * Returns the meta object for the reference list '{@link de.darmstadt.tu.crossing.cryptSL.Aggregate#getLab <em>Lab</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Lab</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Aggregate#getLab()
   * @see #getAggregate()
   * @generated
   */
  EReference getAggregate_Lab();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the reference list '{@link de.darmstadt.tu.crossing.cryptSL.Expression#getOrderEv <em>Order Ev</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Order Ev</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Expression#getOrderEv()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_OrderEv();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.Expression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Expression#getLeft()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Left();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.Expression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Expression#getRight()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Right();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Constraint <em>Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constraint</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Constraint
   * @generated
   */
  EClass getConstraint();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.Constraint#getCons <em>Cons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Cons</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Constraint#getCons()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_Cons();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.Constraint#getAlgl <em>Algl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Algl</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Constraint#getAlgl()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_Algl();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.Constraint#getAlgr <em>Algr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Algr</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Constraint#getAlgr()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_Algr();

  /**
   * Returns the meta object for the reference '{@link de.darmstadt.tu.crossing.cryptSL.Constraint#getLeftSide <em>Left Side</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Left Side</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Constraint#getLeftSide()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_LeftSide();

  /**
   * Returns the meta object for the attribute '{@link de.darmstadt.tu.crossing.cryptSL.Constraint#getPredName <em>Pred Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Pred Name</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Constraint#getPredName()
   * @see #getConstraint()
   * @generated
   */
  EAttribute getConstraint_PredName();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.Constraint#getParList <em>Par List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Par List</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Constraint#getParList()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_ParList();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.Constraint#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Constraint#getLeft()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_Left();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.Constraint#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Constraint#getRight()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_Right();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.ConsList <em>Cons List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cons List</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ConsList
   * @generated
   */
  EClass getConsList();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.ConsList#getList <em>List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>List</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ConsList#getList()
   * @see #getConsList()
   * @generated
   */
  EReference getConsList_List();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Cons <em>Cons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cons</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Cons
   * @generated
   */
  EClass getCons();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.Cons#getCons <em>Cons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cons</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Cons#getCons()
   * @see #getCons()
   * @generated
   */
  EReference getCons_Cons();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.Cons#getLitsleft <em>Litsleft</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Litsleft</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Cons#getLitsleft()
   * @see #getCons()
   * @generated
   */
  EReference getCons_Litsleft();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.NoEq <em>No Eq</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>No Eq</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.NoEq
   * @generated
   */
  EClass getNoEq();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.NoEq#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.NoEq#getLeft()
   * @see #getNoEq()
   * @generated
   */
  EReference getNoEq_Left();

  /**
   * Returns the meta object for the containment reference '{@link de.darmstadt.tu.crossing.cryptSL.NoEq#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.NoEq#getRight()
   * @see #getNoEq()
   * @generated
   */
  EReference getNoEq_Right();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.ConsPred <em>Cons Pred</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cons Pred</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ConsPred
   * @generated
   */
  EClass getConsPred();

  /**
   * Returns the meta object for the reference '{@link de.darmstadt.tu.crossing.cryptSL.ConsPred#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Name</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ConsPred#getName()
   * @see #getConsPred()
   * @generated
   */
  EReference getConsPred_Name();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.LitList <em>Lit List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Lit List</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.LitList
   * @generated
   */
  EClass getLitList();

  /**
   * Returns the meta object for the containment reference list '{@link de.darmstadt.tu.crossing.cryptSL.LitList#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.LitList#getParameters()
   * @see #getLitList()
   * @generated
   */
  EReference getLitList_Parameters();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.ObAc <em>Ob Ac</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ob Ac</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ObAc
   * @generated
   */
  EClass getObAc();

  /**
   * Returns the meta object for the reference '{@link de.darmstadt.tu.crossing.cryptSL.ObAc#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Name</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.ObAc#getName()
   * @see #getObAc()
   * @generated
   */
  EReference getObAc_Name();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Object <em>Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Object</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Object
   * @generated
   */
  EClass getObject();

  /**
   * Returns the meta object for the attribute '{@link de.darmstadt.tu.crossing.cryptSL.Object#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Object#getName()
   * @see #getObject()
   * @generated
   */
  EAttribute getObject_Name();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.Order <em>Order</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Order</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.Order
   * @generated
   */
  EClass getOrder();

  /**
   * Returns the meta object for class '{@link de.darmstadt.tu.crossing.cryptSL.SimpleOrder <em>Simple Order</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Order</em>'.
   * @see de.darmstadt.tu.crossing.cryptSL.SimpleOrder
   * @generated
   */
  EClass getSimpleOrder();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  CryptSLFactory getCryptSLFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.DomainmodelImpl <em>Domainmodel</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.DomainmodelImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getDomainmodel()
     * @generated
     */
    EClass DOMAINMODEL = eINSTANCE.getDomainmodel();

    /**
     * The meta object literal for the '<em><b>Java Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__JAVA_TYPE = eINSTANCE.getDomainmodel_JavaType();

    /**
     * The meta object literal for the '<em><b>Object</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__OBJECT = eINSTANCE.getDomainmodel_Object();

    /**
     * The meta object literal for the '<em><b>Method</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__METHOD = eINSTANCE.getDomainmodel_Method();

    /**
     * The meta object literal for the '<em><b>Event</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__EVENT = eINSTANCE.getDomainmodel_Event();

    /**
     * The meta object literal for the '<em><b>Order</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__ORDER = eINSTANCE.getDomainmodel_Order();

    /**
     * The meta object literal for the '<em><b>Req</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__REQ = eINSTANCE.getDomainmodel_Req();

    /**
     * The meta object literal for the '<em><b>Ens</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOMAINMODEL__ENS = eINSTANCE.getDomainmodel_Ens();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ObjectDeclImpl <em>Object Decl</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ObjectDeclImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getObjectDecl()
     * @generated
     */
    EClass OBJECT_DECL = eINSTANCE.getObjectDecl();

    /**
     * The meta object literal for the '<em><b>Object Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OBJECT_DECL__OBJECT_TYPE = eINSTANCE.getObjectDecl_ObjectType();

    /**
     * The meta object literal for the '<em><b>Object Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OBJECT_DECL__OBJECT_NAME = eINSTANCE.getObjectDecl_ObjectName();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.EventImpl <em>Event</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.EventImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getEvent()
     * @generated
     */
    EClass EVENT = eINSTANCE.getEvent();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EVENT__NAME = eINSTANCE.getEvent_Name();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ForbMethodImpl <em>Forb Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ForbMethodImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getForbMethod()
     * @generated
     */
    EClass FORB_METHOD = eINSTANCE.getForbMethod();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORB_METHOD__PARAMETERS = eINSTANCE.getForbMethod_Parameters();

    /**
     * The meta object literal for the '<em><b>Rep</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORB_METHOD__REP = eINSTANCE.getForbMethod_Rep();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.LabelMethodCallImpl <em>Label Method Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.LabelMethodCallImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getLabelMethodCall()
     * @generated
     */
    EClass LABEL_METHOD_CALL = eINSTANCE.getLabelMethodCall();

    /**
     * The meta object literal for the '<em><b>Meth</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LABEL_METHOD_CALL__METH = eINSTANCE.getLabelMethodCall_Meth();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.MethodImpl <em>Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.MethodImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getMethod()
     * @generated
     */
    EClass METHOD = eINSTANCE.getMethod();

    /**
     * The meta object literal for the '<em><b>Left Side</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__LEFT_SIDE = eINSTANCE.getMethod_LeftSide();

    /**
     * The meta object literal for the '<em><b>Meth Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute METHOD__METH_NAME = eINSTANCE.getMethod_MethName();

    /**
     * The meta object literal for the '<em><b>Par List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__PAR_LIST = eINSTANCE.getMethod_ParList();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ParListImpl <em>Par List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ParListImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getParList()
     * @generated
     */
    EClass PAR_LIST = eINSTANCE.getParList();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAR_LIST__PARAMETERS = eINSTANCE.getParList_Parameters();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ParImpl <em>Par</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ParImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getPar()
     * @generated
     */
    EClass PAR = eINSTANCE.getPar();

    /**
     * The meta object literal for the '<em><b>Val</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAR__VAL = eINSTANCE.getPar_Val();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.AggregateImpl <em>Aggregate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.AggregateImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getAggregate()
     * @generated
     */
    EClass AGGREGATE = eINSTANCE.getAggregate();

    /**
     * The meta object literal for the '<em><b>Lab</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AGGREGATE__LAB = eINSTANCE.getAggregate_Lab();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ExpressionImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Order Ev</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__ORDER_EV = eINSTANCE.getExpression_OrderEv();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__LEFT = eINSTANCE.getExpression_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__RIGHT = eINSTANCE.getExpression_Right();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ConstraintImpl <em>Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ConstraintImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getConstraint()
     * @generated
     */
    EClass CONSTRAINT = eINSTANCE.getConstraint();

    /**
     * The meta object literal for the '<em><b>Cons</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__CONS = eINSTANCE.getConstraint_Cons();

    /**
     * The meta object literal for the '<em><b>Algl</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__ALGL = eINSTANCE.getConstraint_Algl();

    /**
     * The meta object literal for the '<em><b>Algr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__ALGR = eINSTANCE.getConstraint_Algr();

    /**
     * The meta object literal for the '<em><b>Left Side</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__LEFT_SIDE = eINSTANCE.getConstraint_LeftSide();

    /**
     * The meta object literal for the '<em><b>Pred Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRAINT__PRED_NAME = eINSTANCE.getConstraint_PredName();

    /**
     * The meta object literal for the '<em><b>Par List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__PAR_LIST = eINSTANCE.getConstraint_ParList();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__LEFT = eINSTANCE.getConstraint_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__RIGHT = eINSTANCE.getConstraint_Right();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ConsListImpl <em>Cons List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ConsListImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getConsList()
     * @generated
     */
    EClass CONS_LIST = eINSTANCE.getConsList();

    /**
     * The meta object literal for the '<em><b>List</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONS_LIST__LIST = eINSTANCE.getConsList_List();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ConsImpl <em>Cons</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ConsImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getCons()
     * @generated
     */
    EClass CONS = eINSTANCE.getCons();

    /**
     * The meta object literal for the '<em><b>Cons</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONS__CONS = eINSTANCE.getCons_Cons();

    /**
     * The meta object literal for the '<em><b>Litsleft</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONS__LITSLEFT = eINSTANCE.getCons_Litsleft();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.NoEqImpl <em>No Eq</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.NoEqImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getNoEq()
     * @generated
     */
    EClass NO_EQ = eINSTANCE.getNoEq();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NO_EQ__LEFT = eINSTANCE.getNoEq_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NO_EQ__RIGHT = eINSTANCE.getNoEq_Right();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ConsPredImpl <em>Cons Pred</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ConsPredImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getConsPred()
     * @generated
     */
    EClass CONS_PRED = eINSTANCE.getConsPred();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONS_PRED__NAME = eINSTANCE.getConsPred_Name();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.LitListImpl <em>Lit List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.LitListImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getLitList()
     * @generated
     */
    EClass LIT_LIST = eINSTANCE.getLitList();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIT_LIST__PARAMETERS = eINSTANCE.getLitList_Parameters();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ObAcImpl <em>Ob Ac</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ObAcImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getObAc()
     * @generated
     */
    EClass OB_AC = eINSTANCE.getObAc();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OB_AC__NAME = eINSTANCE.getObAc_Name();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.ObjectImpl <em>Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.ObjectImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getObject()
     * @generated
     */
    EClass OBJECT = eINSTANCE.getObject();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OBJECT__NAME = eINSTANCE.getObject_Name();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.OrderImpl <em>Order</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.OrderImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getOrder()
     * @generated
     */
    EClass ORDER = eINSTANCE.getOrder();

    /**
     * The meta object literal for the '{@link de.darmstadt.tu.crossing.cryptSL.impl.SimpleOrderImpl <em>Simple Order</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.darmstadt.tu.crossing.cryptSL.impl.SimpleOrderImpl
     * @see de.darmstadt.tu.crossing.cryptSL.impl.CryptSLPackageImpl#getSimpleOrder()
     * @generated
     */
    EClass SIMPLE_ORDER = eINSTANCE.getSimpleOrder();

  }

} //CryptSLPackage
