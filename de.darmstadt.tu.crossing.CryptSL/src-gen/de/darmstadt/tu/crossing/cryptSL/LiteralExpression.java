/**
 * generated by Xtext 2.11.0
 */
package de.darmstadt.tu.crossing.cryptSL;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.xtext.common.types.JvmType;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Literal Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link de.darmstadt.tu.crossing.cryptSL.LiteralExpression#getName <em>Name</em>}</li>
 *   <li>{@link de.darmstadt.tu.crossing.cryptSL.LiteralExpression#getObj <em>Obj</em>}</li>
 *   <li>{@link de.darmstadt.tu.crossing.cryptSL.LiteralExpression#getType <em>Type</em>}</li>
 *   <li>{@link de.darmstadt.tu.crossing.cryptSL.LiteralExpression#getValue <em>Value</em>}</li>
 *   <li>{@link de.darmstadt.tu.crossing.cryptSL.LiteralExpression#getCons <em>Cons</em>}</li>
 *   <li>{@link de.darmstadt.tu.crossing.cryptSL.LiteralExpression#getLitsleft <em>Litsleft</em>}</li>
 * </ul>
 *
 * @see de.darmstadt.tu.crossing.cryptSL.CryptSLPackage#getLiteralExpression()
 * @model
 * @generated
 */
public interface LiteralExpression extends Constraint
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' containment reference.
   * @see #setName(EObject)
   * @see de.darmstadt.tu.crossing.cryptSL.CryptSLPackage#getLiteralExpression_Name()
   * @model containment="true"
   * @generated
   */
  EObject getName();

  /**
   * Sets the value of the '{@link de.darmstadt.tu.crossing.cryptSL.LiteralExpression#getName <em>Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' containment reference.
   * @see #getName()
   * @generated
   */
  void setName(EObject value);

  /**
   * Returns the value of the '<em><b>Obj</b></em>' reference list.
   * The list contents are of type {@link de.darmstadt.tu.crossing.cryptSL.Object}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Obj</em>' reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Obj</em>' reference list.
   * @see de.darmstadt.tu.crossing.cryptSL.CryptSLPackage#getLiteralExpression_Obj()
   * @model
   * @generated
   */
  EList<de.darmstadt.tu.crossing.cryptSL.Object> getObj();

  /**
   * Returns the value of the '<em><b>Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Type</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type</em>' reference.
   * @see #setType(JvmType)
   * @see de.darmstadt.tu.crossing.cryptSL.CryptSLPackage#getLiteralExpression_Type()
   * @model
   * @generated
   */
  JvmType getType();

  /**
   * Sets the value of the '{@link de.darmstadt.tu.crossing.cryptSL.LiteralExpression#getType <em>Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type</em>' reference.
   * @see #getType()
   * @generated
   */
  void setType(JvmType value);

  /**
   * Returns the value of the '<em><b>Value</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Value</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Value</em>' reference.
   * @see #setValue(SuperType)
   * @see de.darmstadt.tu.crossing.cryptSL.CryptSLPackage#getLiteralExpression_Value()
   * @model
   * @generated
   */
  SuperType getValue();

  /**
   * Sets the value of the '{@link de.darmstadt.tu.crossing.cryptSL.LiteralExpression#getValue <em>Value</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Value</em>' reference.
   * @see #getValue()
   * @generated
   */
  void setValue(SuperType value);

  /**
   * Returns the value of the '<em><b>Cons</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Cons</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cons</em>' containment reference.
   * @see #setCons(LiteralExpression)
   * @see de.darmstadt.tu.crossing.cryptSL.CryptSLPackage#getLiteralExpression_Cons()
   * @model containment="true"
   * @generated
   */
  LiteralExpression getCons();

  /**
   * Sets the value of the '{@link de.darmstadt.tu.crossing.cryptSL.LiteralExpression#getCons <em>Cons</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Cons</em>' containment reference.
   * @see #getCons()
   * @generated
   */
  void setCons(LiteralExpression value);

  /**
   * Returns the value of the '<em><b>Litsleft</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Litsleft</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Litsleft</em>' containment reference.
   * @see #setLitsleft(LitList)
   * @see de.darmstadt.tu.crossing.cryptSL.CryptSLPackage#getLiteralExpression_Litsleft()
   * @model containment="true"
   * @generated
   */
  LitList getLitsleft();

  /**
   * Sets the value of the '{@link de.darmstadt.tu.crossing.cryptSL.LiteralExpression#getLitsleft <em>Litsleft</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Litsleft</em>' containment reference.
   * @see #getLitsleft()
   * @generated
   */
  void setLitsleft(LitList value);

} // LiteralExpression
